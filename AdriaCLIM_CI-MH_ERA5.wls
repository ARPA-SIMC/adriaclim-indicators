#!/usr/bin/env wolframscript
(* ::Package:: *)

(* ::Title::RGBColor[0.9686274509803922, 0.2196078431372549, 0.49019607843137253`]:: *)
(*AdriaCLIM Climate Indicators*)


(* ::Text:: *)
(*v.Beta - 23/09/2022*)
(**)
(*Computation of Meteo-Hydrological (MH) related Climate Indicators  based on ERA5 data into the 1991-2020 period foreseen in the AdriaCLIM project :*)
(*[MH-1] Standardized Precipitation Index (SPI)*)
(*[MH-2] Standardized Precipitation and Evapotranspiration Index (SPEI)*)
(*[MH-3] Number of Consecutive Days without Precipitation*)
(**)
(*NEEDS:*)
(*> Hourly ERA5 data placed at "ERA5" directory (one file by month)*)
(*containing Total precipitation (tp) and Temperature at 2m (t2m)*)
(**)
(*By Leonardo Arag\[ATilde]o (leonardo.aragao@unibo.it)*)
(*University of Bologna*)
(*Inter-Departmental Research Centre for Environmental Science (CIRSA)*)
(*Via Sant'Alberto 163, 48123 - Ravenna (RA), Italy. *)


Quit


AnalisysPERIOD={1992,2011};


(* ::Chapter::RGBColor[0.3686274509803922, 0.6823529411764706, 1.]::Closed:: *)
(*Initialization*)


(* ::Subsubsection::GrayLevel[0.5]::Closed:: *)
(*Header*)


DevMODE=($ScriptCommandLine=={});
version    = StringPadLeft["v.Beta",10," "]; (* max 10 digits *)
IniTIME    = Now;
If[DevMODE,  LocalDIR = NotebookDirectory[],
           { LocalDIR = DirectoryName[First[$ScriptCommandLine]],
             If[Length@$ScriptCommandLine==3,AnalisysPERIOD=$ScriptCommandLine[[-2;;-1]]]
             }];


OutputDIR=LocalDIR<>"AdriaCLIM_CI-MH_ERA5_"<>ToString[AnalisysPERIOD[[1]]]<>"-"<>ToString[AnalisysPERIOD[[2]]]<>"\\";
If[(DevMODE==False)&&(DirectoryQ[OutputDIR]),DeleteDirectory[OutputDIR,DeleteContents->True]];
If[DirectoryQ[OutputDIR]==False,CreateDirectory[OutputDIR]];

LogFILE=File[OutputDIR<>"AdriaCLIM_CI-MH_ERA5_"<>ToString[AnalisysPERIOD[[1]]]<>"-"<>ToString[AnalisysPERIOD[[2]]]<>".log"];
If[FileExistsQ[LogFILE],DeleteFile[LogFILE]];
CreateFile[LogFILE];

tPrint="";
iPrint[text_]:=If[DevMODE,PrintTemporary[text],{Print[text],PutAppend[OutputForm[text],LogFILE]}]
nPrint[text_]:=If[DevMODE,PutAppend[OutputForm[text],LogFILE],{Print[text],PutAppend[OutputForm[text],LogFILE]}]
dPrint[text_,Skip_]:={WriteString[OutputStream["stdout",1],text<>If[Skip,"\n",""]],tPrint=tPrint<>text;
                                       If[Skip,{PutAppend[OutputForm[tPrint],LogFILE],tPrint=""}]}


EndProgram:={
EndTIME=NumberForm[UnitConvert[DateDifference[IniTIME,Now],"Minutes"],{10,2}],
iPrint["\n\n\n============================================================"],
iPrint["= ADRIACLIM CLIMATE INDICATORS                  "<>version<>" ="],
iPrint["= Contact                         leonardo.aragao@unibo.it ="],
iPrint["============================================================"],
iPrint[StringJoin[Flatten@{Table[" ",60-18-StringLength[#]],"Evaluation Time:  ",#}]&[ToString@EndTIME]],
Pause[30];Exit[]}


"123456789_123456789_123456789_123456789_123456789_123456789_";

nPrint["============================================================"];
nPrint["= ADRIACLIM CLIMATE INDICATORS                  "<>version<>" ="];
nPrint["= Meteo-Hydrological related (ERA5)                        ="];
nPrint["============================================================"];
nPrint["                                    "<>DateString@IniTIME];
nPrint["\n> Working directory:"];
nPrint["> "<>LocalDIR];

AdjPERIOD=False;
CheckPERIOD=Which[(Min@#>=1991)&&(Max@#<=2020),"_hist",(*(Min@#>=2021)&&(Max@#<=2050),"_proj",*)
                  ContainsAny[Range[1991,2020],Range[#[[1]],#[[2]]]],Last@{AnalisysPERIOD={Max@{#[[1]],1991},Min@{#[[2]],2020}},AdjPERIOD=True,"_hist"},
                 (* ContainsAny[Range[2021,2050],Range[#[[1]],#[[2]]]],Last@{AnalisysPERIOD={Max@{#[[1]],2021},Min@{#[[2]],2050}},AdjPERIOD=True,"_proj"},*)
                  True,{nPrint[StringJoin@Flatten@{"\n\n\n",Table[":",60],"\n:::::   E X E C U T I O N      I N T E R R U P T E D   :::::\n",
                                                      ":::::      Inappropriate period to the data source     :::::\n",Table[":",60]}],
                                                      DeleteDirectory[OutputDIR,DeleteContents->True],EndProgram}
                  ]&[AnalisysPERIOD];

nPrint["\n> Analysis Period"<>If[AdjPERIOD," (adjusted)",""]<>":  "<>ToString[#[[1]]]<>"-"<>ToString[#[[2]]]<>" ("<>ToString[1+#[[2]]-#[[1]]]<>" years)"]&[AnalisysPERIOD];


(* ::Subsubsection::GrayLevel[0.5]::Closed:: *)
(*AdriaCLIM Logo*)


AdLOGO=ImagePad[Image[CompressedData["
1:eJzsve+PJEl+n7ewDcP3rnEv4tUBLL9YgK8ODdyLMwEDnbtvRC8PRFsrHvRi
6au79lo4eHvdoohbEN4DcvQL4O5ZrePAs9wDgbpF8uxVa8kGy+DukCbVOGqW
FI4lNOwdY2VrpNK1RoBkD6oP9Q+0K6aqtmtrsiqzqjLy843M5wEenXg3UxMR
GZkZFZ+KiP/8W//DX/3v/qPnnnvub/1nk//nr37zjRd+7de++Rsv703+j195
/W99+2+8/up/+1+9/uuv/o1Xf+2/+NZ/PPkvDyd/9sl/+txz/8lzAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAt4z7g72J6cR9dVkA4PNkH3x6IzZR
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
kMOVNXdMP0rPzg1kcFWtrbuoOK9bdEh21w7E80PeRN0GKrLpb+lPRHM5eXM7
viyN2Fcpm+4RpW5Ts6qvT9Vk07ULqnnRMvq5+G5T7q9VZNPcQdnOSQV16FbU
j6rO6y5ibtts+r7z/WOTNYq1tG3dZNPnVVpRPwuhf141ZjxQJ0av7bCK65np
x1VR3/fWcOR1iIiIUageM4B9fAZmIIcr6zM50yi+vTBzz9/z+BwtYFZHdtci
DMwjJOo2qJvZnEfPQNuvshf7dTEwr2Ra9fWpiux2PZe8TUt6Pbu/Ouq2C0EW
cV6XTZ8ZwwrLQl53W/ZDy21bF7M+tsuaTYW9Xa59W8jsj+u8/v3jn9Fb5XaZ
flwV5X1vFUdeh4iIGIXqMQPYx+8xaSCHa9NemJ1V1+Lq4KhXY15HdtdgDMwf
JOo2qIvZXMeFgTYvPTcS6/UxMK9kWvX12ZWsujVQ3F8VkkWY12XTdV+9ENe3
4ra9iLRtQ5Q7qnn7jOdVY8niG9d5n+Z2W9ZV2gcDXMLW4sjrEBERo1A9ZgDb
jPuDjoEcrk17Ya78TnJ1cNQRZXV52Z3PDQ/D9TwIjYF5g0TdBqGJdD7nc3Mk
sV0nA/NKplVfn23JmjHvvaxfb9NRt20VZJHlddn0PKZQ/anVeV02fQZXsfdl
8LYNRVb9mk0L+n7Y+t/sZdN9L2NbK7ms75vJBnVWj6uiuO9jwZHXISIiRqF6
zAC2GfcHXQM5XJv2wlyZgV0dHKUGsrplr8nu4sTAfEGiboNQZPHndM/MlWSR
zNMZmFcyrfr6bEo2zVWadC/lufU+ZVbIIsrrsmn2GypP8rY2r5u1bciymJ63
z6ZZjvp6hdafFxr182obsttzGNXtX6XnZa5lph9Xmb7vY8OR1yE2zm9851V5
GRCxetVjBrDNuD/oGcjhynidV/5RXHth5u7nOWe2rk2dz5HdNQQD8wSJug2q
Jgu3v5oVzc/TGZhXMq36+pQlm95Lp+r2qtFhFvEzMdPPYyclyxk6T/K2Mq/L
6nn3mZ23N3AP1KnPu1sz1s/CrsdV6+u19vdYmX5cZfa+jxFHXofYKJ//2ls3
P/vpF+TlQMTqVY8ZwDbjeM6u6+WVfxTXXpjpquvgMzADedym2V03ULeECjAw
R5Co26BK/NxVFnbNhhVNz9MZmFcyrfr6lCFr5l5yZc3d19s6mT6rSEqUsY6s
ztu6vC6r73cq5ubts2mWcym+Rir9dTf9G55dyfTPtro8WdMG6nGVufs+Zhx5
HWKjPL7zys3Nk+duXvzmG/KyIGK1qscMYJdxf7BnIIcra+788Sg9uzaQw5W1
s+paXB0cnRvI4DZ1ZX1Aj4G5gUTdBlWQTdcBxX6WyTb2MoPzdJl+Xsm06utT
RNaeudF1+rn/jvpabIKB65YUlK+urM7bqryu5mtvat5+Up4T8bWxoH9eRbFf
9iZk07Gd+t6r29zfvmb6cZWp+z52HHkdYqP88KMvP83r3n0vkZcFEatVPWYA
u/gMzEAOV9Zn5o1H6VliIIMr6+Wq63B1cLRnIHvb1NzvfGAHA/MCiboNdiVr
9h5JZfR1NzVPl+nnlUyrvj6ryNo5N7pOv47V1L21jsxwXpfV/0xoTV6X1ZuD
Vt6225I1f+/rTTW97n5TsnaP7Xz+urfUHupxlYn7vik48jrExuj3wvRZnffq
0y/Ky4OI1aoeM4Bdxv1BaiCHK2Nu1uX3lzSQw5W1u+o6XB0cnRjI31hb1zAM
zAkk6jbYhaz+eUqr+nm6rvp6zMn080qmVV+fPLJ2z40W2VVfnzJkRvO6yX/f
yerfp7gVeV02vW/rLot83j6bZnVt3f+yyK76+uzKrF+3YW/zdX4us8v04yr5
fd8kHHkdYmOc74U5lz0xEZuleswAdhn3BxcGsrgypnnl92vWDORwZV25r9zV
wdGlgfyNtXUNw8B8QKJug22ZlP3UQPtZ08S5W5l+Xsm06uuzTMbcaBm76utU
RGY3r1PkKo3P67JpZjWMvW03JeN5VUYTY4FtyPgd1qKfZXaZflxFXlchjrwO
sTG+/8FXP5fXsScmYrNUjxnALuP+4NpAFlfGZLnsPv8ykMGV9XzVNfDr1Azk
b6ytayAG5gISdRtsQ8YeWOuUZ/WZfl7JtOrrs0jG3OgmdtXXax2ZwbxOWKY2
5HWqM1tl8/YZWd0myscCm5LxPsrzaWaX6cdV5HUV4sjrEBvjz376hc/ldZ8M
viQvEyJWp3rMADYZ9wcdAzlcKfPKP0rPDg3kcG3cCzO67+htxcA8QKJug02Y
zVmo5ihjUvoMyPTzSqZVXptFMuZGt7Grvm6ryIzldZn2OdDovG7yfx82pW03
uAZkdZsbzTq7jHHDOn1mp7znveR1FeLI6xAb4Te+8+rnsrq5X/n6HXnZELEa
1WMGsMm4PzhU53AlzR3Dj9KzUwM5XBv3wkyCdUqoFANzAIm6DTYh47yaTZRl
dhnzbmtVXZdFMrK6Xeyqr18emb28Tvm8bmxel01/t6LMrWqft8/I6naxW/f1
2hSubynV7UNeVyGOvA6xES7vhTn3ze+9LC8bIlajeswANhn3B6mBLK6MaV75
R+nZhYEcroyXq67BVXx7Ya6sC9jDwPf/RN0GZcnYA3MbJZldRl63VsU1Wbo+
++o2iFw/b7qvvo7LZIbyusn//0RclibndeqzW2udt8/IcqrwsM5rtgmZPn/G
cpLXVYgjr0NshMt7YbInJmLzVI8ZwCbj/uDcQBZXxiSv/AZyuLKerLoGVwdH
XQMZ3CZ2A3VHCICB79+Jug3KkJHV7WLtmV1GXrfWuq/H0rVh7rsafRuuXJev
IDOS12U25t8bmddN/rMjLkflbVvQ7hb6UhM0+RsDT8a+CbFIXlchjrwOMXpX
7YXJnpiIzVI9ZgCbjPuDSwNZXBmfmbMapWeJgRyurCu/w14dHJ0byODKeh22
R0LVGPj+najboIhMPwfdBFf+JiHQNSOvW2Od12Lpuvi576G6/g3S1Pxlpn9W
JkbKUfm1yezkdRbOb62l32fT5xVZTnX6trT2GwP1WlEsr6n3Xew48jpEU774
zTduDl97fSNX7YU59933ko0/k4wP0Z7qMQPYxEAOV8ZhXtn9mjUDOVwZc8s/
x0AGt4nRnCsPUwx8/07UbbCOSfkODbRRU6xtP6yMvG6tdV2HnOtyoa57A01V
13OZTJ+T+fvewvovb+PyuszOc7WuvK5noK5NU3au7TKG+jOWk7yuQhx5HaIp
fV7n97Bcl7+F9uMfP09eh2hQ9ZgB7DHuD/YNZHFlPM8r/yg96xnI4sq48rvr
1cFRYiCD28ROsA4JQTDw/TtRt8Eqsum8L/tgVadvy05N1455uDXWcQ1yrgnr
GMJpYp+5zEZeZ6WfNTGvs7C2rvK2XdHe6vMPm6z8LLuMtd4xSl5XIY68Dlvs
8197S16GVeXya+IUWd3b77wkr39s1wuxLtVjBrDHuD9IDGRxZUzzyj9Kzy4N
ZHFl7K66BlcHR6mBDK6sl6H6IoTDwPfvRN0Gq8jYByuEtTwnMvK6tdZxDbge
tbp2nX5dZPq8zq+HtvIbi6bldV0DbRqkbXPamjM2wyo/ezOzk+tjecnrKsSR
12GL9ftIqsuwTn8u3c9++oVacrqrT7/4dB9MdZ1X6bM669cLMbTqMQPYw+dg
BrK4MiZ55TeQw5W1s+oaXB0cXRjI4cpa6/lUUA0Gvn8n6jbII9PPOzfZtIbr
Rz60xtDtv3Qt/DoG5r7Dm9Z5XVdca/Vz88LAdfisLBW3rbpuQwNtGqRtc9qa
3+qEV7YvZsb4IFbJ6yrEkddhS/X5j8+pfCamLss6/b6Ufn/KkFndhx992fza
teM7rzzNLtXlQFSqHjOAPcb9wamBLK6Mz/xGc5SeJQZyuDI26ey6TrDOCMEw
8P07UbfBMtn0t/Xqdmm6Qffvy5iPW2vIts+5Fj11fVtkp85rm3Ot1XmdJZuW
11ky2Lx9Rh+u0yTUdSy4xhcG6o6bS15XIY68Dluqz398VhXLmi2/T2XVOZ3P
v3w7qOtWRp8pxpCvIoZUPWYAe4z7gwsDWVyR13ll93tMGsjiyph79p7nKq6z
6/gOFSkGvn8n6jZYJuO39XUYdF/MjLxurSHbPvLrcJFjTM8D6bs4I+sIdi0y
MoZgbbvQxh0DddvEyyzu51Xt++hn0z1z1fXG7eS7ZoU48jpsqfP8J6Y1Wy9+
842n+1ZWkdV9MvjS07V76jqVdV7uWPJVxBCqxwxgj3F/cGkgjysyd+w+Ss9S
A1lcGVfuIXkV19l17IUZKQa+fyfqNlgkY765ToM9N7L4cqJaDdXuOddhqK7r
Gn3Z/BlGfv628CylbLru1p/h1cts7++Z1HBpV7URz89byesiadtI2niY3T6v
OiXq4rPHGJ5X3RDXck27DA3Uedd+cDEzXfI8iy+z3UTyugpx5HXYUhfPhYtp
zdb8HLddsjq/Vk9dj03012dxTaC6PIgq1WMGsIeBLK6Mp3ll9+vWDGRxZUxW
tf/VwdG5gRyOvTAbjoHv34m6DeZkcZ6zdbGkujyb6Nu6MCfZ8lqS160xRJvn
XAOr2U0vq2A/1mw6F35hoD7LyuY0DV/z6K+D0b7WiLadta/VdVe9rIJx0qx+
FvvQ2nMBqiSbPrPV9d1Un73556of02w0Xpr9nZNsmuOp61GF5HUV4sjrsIUu
5j+xrtl683svb5XVxZRNzl3OJ/06Q3WZEBWqxwxgDwNZXBnTvLKP0rNLA1lc
oeva/+rgaGgghytj7fvZQHUY+P6dqNtgTmb/nC0/b1P4+/ps+rv6w9mftf47
69zfXFRwLcnr1hiizZfa32L23csCnO8262vW7rOk6nqWbAvyulvJ6yJp21n7
Dg3U63N1zMI9r6z1pW7V9VxRd2v1XqXviydVX//M7m9MSt8TVbZH23HkddhC
l/Mfv8ekukyb+u57yVZ5XSzn1S26uBbS6+uuLhOiQvWYAWwx7g8SA1lcGZO8
8qtzuJKuzLmuDo72DORwZQ0y3w71YOD7d6JuA09m99wan3mku8zbzOqWZvby
k7lb161EnTdV2Q7DLcu8sVW3d077q9tyuV2TltVZMq9prA3UktfF07aW1l35
9/RhlfVbUeeTzM6YIPgau2y6n7G6noX9uqZr78dHPQP13bh9QrdNm3DkddhC
l/OfGNds+fPntsnr/Ll96rJv4vJayFjzVcQqVI8ZwBYx53Wj9GzPQBZXxvNV
7X91cJQYyOHK+sw1gHgw8P07UbeBx+DcxTynq2y/yGy65slibterqo67Im6H
RsxFZbbW1l1UeQ+VqHtiqO477/m5Rf3J6xb6XsVte2GgTlasum2HBurk9et0
O1XWraDe+4bqHjSnyuyN8Rb174xuyPqvaBN//S8M1L+sjRgjWcGR12HLzMt/
Yluz9ZWv39np/Dp1+Tdx1Vl9seWriFWoHjOALcb9waGBLK7QvLL7M+EMZHFl
TFe1/9XB0YmBHK6UwToh1IKB79+JgTawtrbOz590AtfX2hxNsPpugvq6q+tf
BZmdzEaSA2fTOVALmV3t9Td07S1IXhdB22Z21tb561vbbwsW6u9/X2FhP99g
77/M1m9Ilj1XXPel9rG01lLSR9qII6/Dlrkq/4lpzda2Z9fFeIZd3lrI2PJV
xKpUjxnAFuP+IFVncTvkdYcGsrgyrvwtqd9jUp3DlZTvTpFj4Pt3YqANTg20
w9yTGut9YqC+c9O66r0OcRtE/zzN7MyLStdsZnYyu1rngTPyukXJ6yJo28zG
+jLpOdCZncyuE6h+VjLZZWsb7xWR2Vprucrox0iWcOR12DJ9Lrcqx4plzda6
vTB9vlV0tp3PLNV1KOPha6+vrINvA3X5EOtWPWYAW0SS1+WO2/26NQNZXBlX
7lXlczADWVwZ02CdEGrBwPfvRFx/K/mCL4Ni/zor+/dd1133PMRtEP1cVGZj
XtREO2aBzktKv//npf0f/6cHtc4H/+obf5hOvNnFV7/7RxvVcVt/8KNPdn5m
ZdMMza+PyTsnsltl22btyusuZ/U9Ddm2k885NFJX6fqqWVt0Mv1YIMh52Nn0
HlVf50V9Oych6roLmZ3cdpUm3u1NwZHXYYv0edy6HCuGNVvr9sL0GZb/3+d1
XZVN+kxPXY8yFuWO87oitkX1mAFsQV4X3nXtf3VwdG0giytj8HPRISwGvn8n
4vpbyBckWd1CG1hZC9RVtcFCWzAXtQOZfq5vmBmY+57zq2/8YfcXXvndm2Vr
HN/Xum5n8u+l6u8zAT339cumv3GovY+l3//zi9/87Z+on9Eh9O+eXjZd713r
ezDT5zi+7p0667yOWd+WPr8D1GnPQB9fvuay8V4Rme3MLvoxkiUceR1Gqs+j
Pv7x8xu5bm3dPMfa9DOP77xSa71X7YX59jsvPfNnn//aWyv3/6x7T0xf7k3b
dtVemIv55KafGcsaSsQ81WMGsMW4Pzg3kMcVmbvf1Sg9O1dncSVcu5bEQA5X
VjPzorAdBr5/J+L6q+clTMzdZIHWAsU2F9P2+u/Crn3IZxF566Be/7v/ZOVa
rF/69u99Lgeb/HeJuh2WcdOcRznGr+354pqX1/Ummvhdkis5t5qXD8/9ayd/
sPJeeuPtP8u9/77fuwz13usp332ZjXNrTfStRTL9/uCVtklmYw2l6Wu+TGY3
s4t6jGSNsu8URIuuW0MWWp8l1Z3VeZf3wvTl8PtGrvs7vpzL2ZdiT8xdz93b
Rd9uZHUYu+oxA9jCr10zkMcVmeaVfZSeXRjI44pc+Z3j6uAoMZDDlbHy38FC
/Rj4/p0I625hvq6rqv8ymY3z7DriNmAuakt++bXf7y3O/7/4rfdzM4OAY9kg
e6ntyqRcnYnXwjF+be3impHXXc/qYer3SM7Y3OrP/eI7ufe3z9Dz8kCf/b37
u//nMJuuaZe3rYH33bm6DfLIplnNUNgulZ49munzx0XNnFdXRGZjf9Rlox4j
WcPaOwVxU9etIWta9rO8F+aHH335af3L/t3FrE+1J6Zvt3Xn74XQ76tZtp0Q
LaseM4AtyOuCu/J7ekR5Hd+bGoCB79+JsO7M1y2R6c9Iks5niese9TPVaTMp
/2/LM4BVOG2OVduemOJ6VtGHzOV0c1zcc6vDiV11Gy6SadcPmdoHc5lMu094
pWfZiq9z1O/3zN7axOja0DKRv1MQP9Pv71i0f2JV2Y+qjn6d3Lwcfq3aNp+x
eCZc3XtizvXZWdHZdFXo+4OqjoghVI8ZwBaR5HW587qj9GxoII8rMl3V9lcH
RycGsrgyrqwDxIOB79+JsO7M1y2R6dcc1nreVk79mYvagsk48lA8ju2q22Ad
k/LtOW2e2ampnrHmdX7PUpM53RwX79zqqbW29ffDfM3fojU+61N1GxSRadfY
VbJPambn7DqT470yZPozHhsxRrJIxO8UxGf0a8j8GWWhsp+ifSdD69fTVbG2
z9fD10exJ+aiITNW3w9YU4dNUz1mAFtEktcleWU3kMXtmtelBrK4MnbD9D6o
EwPfvxNRvdW5VKqodxmy6blCyrbpCOteeX2Wz2Vb3CPOnye1sJdctHNRbnrO
l2oMG8XezE6bZdWyblVcx230GWq3jrbZFRff3Kpv20Tdbnn4+6FMHRb3+fT7
+y4+u/25movP9R/86JOy7wSf3ZjKL/PItGvs0orqkIjHMubHe0Vk08zTyr6Y
0Y6RLBLhOwWx0LffeanS7GeTfSdD6vO1qsox30dUXacQGau//up6IYZQPWYA
W5DXBbe7qu0jyuty2x/iwsD370RUb/VemB1FvcuQ6bPMrrDuK8u1mLu98faf
3aw6q23/V3647Vgs2rkoN93vTjWGTdX1L4ObnmOnaqNa9t51ceV1vs9Wso6n
Dlxcc6uXztiaukXqaMtVZ/r993f+pNLz2UKRaXOaStbZTz4nFY9lbrJI8tl1
GGlHb7RjJItE9k5BLK1fQ3b16Rd3XlO37b6TuJlVZKz+eivOFUSsS/WYAWxh
IItrel6XW3bP1cHRhYEsrtBQfQ/qxcD370RUb+UeP+bOrVsm0+4VKmufpfVu
dY/FopyLmpR7XzyGjWYu1E33XVS0UaVnQq2pXyx5nek8KQ8Xz9yq6bZ1071p
le3TUbdBWTLhWvuKym9hL8e0irooyeyssYtyjGSViN4piBvr15D5tXHbZD9V
7DuJm+nbe9uMtcq1h4hWVY8ZwBYGsjjyOuOG6ntQLwa+fyeieivnHrqKOm9C
pl1/WEu2kId4LBblXJQrubdcIM1n34tMytsVtlXwtWQujrzOdJ60ChfH3Kr5
tnXaszal57NuSqbdTzKpoPzK3x3NNX0/lCXT75PujXKMZJVI3imIW+v3W9wm
/2FdnUbf7ttcL7I6bIPqMQPYwkAWR15nW74zNQQD378TQZ33mb9ZT6bfE7Oj
qLd4LBblc9Xp1ox5D9X13wSnXdsT/Aw7Zz+v82eqmX/+5uHsz62az+o8kzKe
NvkerJpM99umtIKyq8e3Uf2eZB2ZftzsjXKMZJUI3imIO7lt/uPX5anL3kb9
usZtrtfxnVfkZUcMrXrMALYwkMWVsbNc7lF6tm8giyvjyjmNq4OjSwN5HHld
SzDw/TsR1LkrrG80v6+flHVYdf3zzn/zZ/vM95/8uV98Zz4u6SrqLB6LRflc
ddqz68znA8s43RxZ8HOznP28Lprz6pYR9psy+hy0o26jMojbsaOu/6b8l//N
/3Lu381+r2j/vn71u3/02Xv8+71Ls9lMNt3DUT2+7VZ0GUwQYkxYZ5+Az2P8
nYK4s9vmP6zZqt9t10KSr2JbVI8ZwBYGsrhC88rt160ZyOIKXdf2BrK4Mgaf
94N6MDCfkQjqfCqsbzT3Tlby7Jcf/OiTz+bvXv+7/+SzHG6ewf38L//ONuOS
U0WdxWOx6OaiJmXu0F6b4XSZVvDfCgjrVsbo1jYt4mzPrSbq9imLsI2i+a3O
Iq7kfsfz9/2L33r/szGA/12OHxf85m//ZJux0nCXcmfavTznRvd7knVk+j0x
o3znW8X4OwVxJ3fJf1izVb/broUkX8W2qB4zgC3UWRx5nXnTIB0PasfAfEYi
qPOFsL5p3fXdFl/WdTncwlq4EErmZcRjsejmoiZlToTtlarrvw3KNquhblbz
uujurWWc3blVyW8rtmFS1n3aaTOqbrP9X/nhM7nemvV6W+ddmT6vizKfXUem
3ZvCG/1z3BKG3ymIO1uU//zsp19gzZYhd1kLSb6KbVA9ZgBbqLM48jrzpkE6
HtSO+Lu3N2lZnaM5b2syNugKxyXXojorx2LRzUU5bT6TqOu/DU57hl3Q/SDF
/WGdnZD1rgNnc241qvMAnfadFs27fxlFe81+F5RsW2YD2VJjzq6bk+nPsItu
jGQZo+8UxEr0edu6LM6vxyrK9FizVY9FayH9dfLXouiaquuBGFL1mAFsMe4P
huo8jrzOtGmQjge1I/7uXXtel+nPNKm1vrvgtGunvLXPA4vrG91c1KTMPcat
m+OmOYei3YJmBs5mXpeGrHNdOJtzq111u2yCuH921PXflknZL0VttvUetpOx
Vioe66UVXgIziNs0ujGSZYy+UxB31mc7q9bU+exn8c+++M03bq4+/SJrtoSu
yk39mjt/fcr8Wa+6HoghVY8ZwBbj/uBCnceR15k2CdLxoHbE370VeZ16j6Sg
61uqxOnzukRQZ2V9o5uLctr5nouIVeV1aeD+YC2vi2r91zqcvbnVnc4XUzAp
87mwvS4iNrrnlZs9i+b7dy+fqefP3Q081utW13PtQF7XHJy9dwpiJfqcrUz2
M3fV2i3WbNVjXtu//8FXV65vXJWxfuM7r8rrghhK9ZgBbBFDXjfxmXnvUXq2
p87iyOsgJlqY1x0q61tnXXfFafft89a+f5i4vtHNRTndPC5uZ9AztJy9vC4N
Wd86cfbmVrvqNtkUg22I6916T0lX8ln087/8O0/zvF/69u89zfP8Wb0+z/vN
3/5JVGPbusi05z9HN0ayDM9DbKrL+c+67GdRn/Mtn2unrkvTXV4L6du/zLpG
//f8dV2+zur6IIZSPWYAW0SS1yV5ZVdnceR1EBMtzOukeyTVWdcqEI9N0pbV
N7q5KPXYFW31MWcvr2vE2jqPszW3Gt3aOo/j9wWxufXzylX0LPq5X3znaZ73
4rfef5rnvfrdPyqb5yUVdl0zkNc1B2frnYJYiYv5j89+Nl1z5ddu+bV4rNmq
x8W1kL7d/Vl2m/79ecbq/1NdH8RQqscMYAvyOvI68rp2QF5XvX4ex8/n+Hkd
P78z348pxneteGyStqy+Uc1FOf36SzTWx5ytvK4Xsq5142zNrabq9tgGA+2G
m3m9w7Wu5Vm0an3exKTCrmsG8rrm4Gy9UxArcZ7/bJP9LPruewlrtmpwvhbS
t/e2n7GYsZKvYlNVjxnAFuR15HXkde2ghXnd6a5l9uee+PkYfw6Kn5/x8zR+
vsb/Drtp71rx2KT2+XZxfaOai3L68w1xCwP3CUt5XRKyrnXjbM2tdtTtsQ0G
2g03dIdrrX4WJRV2XTOQ1zUHZ+udgliJPv95+52XKvksn/34c9LUdWqqfi2k
XxN3+NrrlXyez/zIV7GpqscMYItxf9AzkMc1Nq+b2FnV9gayOPK6FtHCvK7U
XMP3e5efWyPn90Kar5Fr07tWPDapfW6mbfXdBUdeF6WB+4R6jnxulPs1rsPZ
mVu9VLfFNkzKvW+g7XBDd7je6mdRUmH3NcNkfHxJXtcMnJ13CmJl7rKmbtXn
lTn7DjfXt2vVbVv19Ue0onrMALYY9wepgTyuyMO8shvI4sqYrGr7q4OjSwN5
HHldS2hzXrecyfk8bv9Xfsi7dgHx2IS8zjCOvC5KA/cJ9Rz53NOQ9VTg7Myt
nqjbYhscz6tY3d/yequfRWnFXdgE4u8LUY2RrOPsvFMQERFxjeoxA9gikrwu
zSv7KD27MJDH7ZLXXRjI48jrWkLb8rpfeOV3L0Jnck1614rHJuR1hnHMf8fq
XsA+oZ4jn5v7e66YcXbmVjvqttgGx/MqVpMtr7f6WZRW24P1TMbre+R1zcHZ
eacgIiLiGtVjBrDFuD84MZDHkdfZtRum50HdtC2vc+Lvp3XWtQrEYxPyOsM4
5r9jNQnYJ9Rz5E8NVT8lzsbcarT7jDqeV7GabHm91c+iqN7nZfDjdfK65uBs
vFMQERGxQPWYAWzhz4YzkMc1Oa9buZ9QJHldbttDfJDX8a5dh3hsQl5nGMf8
d6wmAfuEeo7cG9V9VBZnY261p26HbXE8r2I12fJ6H4rLHW22vYrJeP2EvK45
OBvvFERERCxQPWYAW0SS1+WO20fp2amBPK7IdFXbXx0cnRrI48jrWgJ5He/a
dYjHJuR1hnHMf8dqErBPWMjrGnd2ncfZmFuN8uw6j+N5FatJxNe7U20v1jIZ
r5+T1zUHZ+OdgoiIiAWqxwxgi3F/0DGQx22b16UG8rhd8rrUQB5HXtcSlN+9
f/O3f3KTfv/Pkzrr68jrNkI8NiGvM4yzMR+Km5sE7BMW8rrGnV3ncTbmVhN1
O2yL43kVq8mW13vfQNmjzbfz+O7px9c/+NEn5HUNwdl4pyAiImKB6jED2MNA
Hldk7l4jfq9JA3lckSu/c0SS152H63lQJ3Xlcm+8/Wc3v/rGH968+K33b/Z/
5YeL75+kzvo68rqNEI9NyOsM45j/jtUkYJ+wkNfth6qfEmdgblXdBrvgeF7F
arLDNVeXPap3+jrcwv6iP/eL79z8wiu/e/PXTv7g5tXv/pH/3d1NTTleY9rT
As7AOwWb7Te+86q8DIihffudl+RlwOarHjOAPQzkcYXmlXuUniUG8rhd8rrE
QB5XJN+ZGkKV36W/37t8+r3d53K/9O3fe/p9vsT7J6mzvo68biPEYxPyOsM4
5r9jNQnYJ+R5Xai6qXH6udWoz+NyNtZb4eYmO1zzoYHyd6rrxTom9Tgvqmte
jkdeZxenf6dgg33xm2/cfDL4krwciCF9/mtv3dw8ee7mK1+/Iy8LNlv1mAHs
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
x5HXmUbcN8jrwpjW1JZDA3XN05fLz4N3AtY9bx/SqjU3B+7I64Lh9M+mRN0G
ITHQvquc53adgHWv43k1dEbP5/PM2sDaunBLPn3fOPK6xiC+lhi5eXth+vV2
Psdb/rM+01i1dyY5Blo2by9M38/9f5/35w9fez133SlrSXFX1WMGiINxf5Aa
yOOKzF3jNUrPTgxkcWXs5pU/oj0xV64RBHuo3z2OvM404r6hyOt2OasnFtOa
2vLQQF2L9HOQfi3gTvPIrtw+pCG83rXsVeLI64Lh9HOriboNQuKmeY36eVTk
5eweS3asK8+rHByZ3bp+tzdrowthOcjrKkR8LTFy/dq4xTzi4x8/f/OVr99Z
+3d8lrecZZBjoGWX98L0a0WL+rnPp5f/HmtJcVfVYwaIg3F/sG8gjyvjM98H
R+lZx0AWV8bLVe1/dXB0YSCPK2MnaEeEylC/exx5nWnEfUOR16nzhjpMa2zP
cwP13ajPTey5271Gkxy33Yc0lGbmwJ3+/knUbRAKp59bTdRtEBoX3+81fJ/o
ufXPqxNn73nVVV/rVTgyu7zr1VlonwthWcjrKkR8LTFi/Zq4xSzC7wNY9u/6
rGNxf0xyDLTq8l6Ym2bLb37vZdaSYmWqxwwQD379moE8bts9MS8N5HFl7OSV
/+rgqGsgiytjGrIPQnWo3z2OvM404r6hyOtiWBO2q2mN7dlxzH3WZbeu67rm
epPXBcLp51YTdRuExk3XnQ0N3MttsKu+3qtwZHZzn/ktiNM+h1JRl2gk4muJ
Eetzi/m+gH7/v20+Y/Gsr6L1SogK53th7tLPfUY3X4vq8zt1nTBe1WMGiIdx
f9AzkMc1fU/M3Lzx6uBob+K1gTyuSF9GU+fqQD7qd48jrzONuG8o8roY9kTb
1bTmNu0aqHNbPKnz2uZca/K6QDj93GqiboM6cNM1aer7uC3mftexgCOzG7qc
dduOvK4xiK8lRqzPH/x+f3790S6fMz/rixwDLer7uN/nddd+Pj+/0a8rVdcJ
41U9ZoB4GPcHhwbyuKbviXm9qv2vDo56BvK4lf7Lv/LazZ9++x/cvJX9ZRq0
I0IlqN89jrzONOK+Idn7yMA9EdpU0Kax7YsZs726r+/CdSavC4TTz60m6jao
CxffvpgxK3teFeGm68MvDbRR3X52Xl1Om1wIy5XW3AUajfhaYqT6tXBV5ms+
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
+wayuDJer1hj11Xkc//6H374dA3dBxeP1uVzyzZhjV03eKeEUqjfPY68zjTi
vmEmr/O45mR2qboty+JYa3cz63NRrEt35HXBcPq51UTdBjFg4B5Q659Xqfo6
QHUYePZcq9ugiRi4roiIiFhC9ZgB4mfcH1wayONMr7H7D3/v92/++Q//6c1H
f/hJ0Rq6Ijt5dYhojZ2pefg2o373OPI604j7hrnnhGtGZpeq23FTZu0uvXdF
9lxE5z45fVaRqNsgFAb6f6Jug1hw03M4zw08P+rW99GOuv2hOtx0nbu8X6nb
oYk4/TsFERERS6geM0D8jPuDroEsrtQau7zyh1pj59fQ/dnZX978rw/+zS75
XBPX2LFPjgHU7x5HXmcacd8wOUfjptlRrOfZDeu+56rETecOY237jfp+jNfJ
kdcFw+nnVhN1G8TG7Hmlvm48r2BrjPTfVN0OTcTItUVERMQC1WMGaAaz/SbV
eVwZu3nlr2KN3b99u/90DV3/jz+9+Z3Lf19lRte0NXa5mSPUi/rd48jrTCPu
GybzOo+Lb59Gvyawq263qnDT83Sk93KoPu8invd25HXBMNDfE3UbxIprbm7n
69RVty+EwV9bA32MZ08gGvpMQkREbJzqMQM0A7/XpIEsrozDvPJvu8buX/zP
//vNn55fVr2Grg1r7KLZ56upqN89jrzONOK+YTavm+Psz8MOXYPnU2ft3zPQ
zrvq65Co23NXHHldMAw8ZxJ1G8SOm67N9vd67Hsqn9Mfmo2b7ulqop+q26Kp
GHinICIiYgnVYwZoBuP+YM9AFlfWk7w6lFlj59fQ/bMf/cXTNXQ15nNNXGOX
ew2gPtTvHkdeZxpx3zCf181x09+hS/vWkn4+9VDdLnXhpusdT1xce2Vezsrc
mN+tOPK6YBh4viTqNmgKs+dVN7Ln1XB2f3fU7VcHs2fzsI39ftY/rfTNc3V7
NBUD7xREREQsoXrMAM1h3B/0DGRxZfR7dz4zT5a3xu4//L3fv/nkBxc3H/3h
Jzfv/eSxOqNbNM27BscPRl0DWVwZc9c5Qn246fc1pbWeY+imexjK6ltnXatA
3DdO1fXfFDddP+H72LDucZybZnR+Drgx+c82uOm6gBNncy5qntE18vxWd5tb
q2xku3qc+N3V5LZVsvC8OjfwfMp7Xp228dq7z7/Dff9P1GWqC2drzTq/6wyE
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
kQRl3Pg81Bi2hCeiWrhwmX66brvZPPd5A8vlLrrfNbLdt72t9AXbcKlq6h84
rrg79z377orMjIxYEbEi9+cDX5DuOztjRWTkj1rfXBFngtC5bkv3A0AbJu2e
dbcvevUuVJr+frLz7MODxj4ALB2DXwdQFIlrEJ23rNdmPbcQD+PP/+I3qDVC
VSimptSuq/nrv/2T4n1A9av0OwOARYEP56MnV+zWB1PgxfmoccX//uPjRoEf
N6VN0gl4pgg9RxrhmPDrRjD7PHwzoFXp+OYgdK7b0v0A0IZJtw7munTfxjD7
WrvbiT4s0qvr+378PFDZx6U8v1Jj9ntPDo1VtXWhBr9OPSPzTu19BfyRuAYR
+oM//q0gHwOvDtUk602HzHPq6pCUSr8zANg1JhV4cT5y1nh9+PKbawVeXIxf
t1Xgx02pTTkHzxWh50gjHNNZ+3V9/+2eTHYtu60J/7t61//WrhN3pXFMhM51
O3DcNlLOemStCPS5Kd0HkKG/3qX/Xqhq7UgzvD6miFcncL2tAtu9OGr7duL5
0MT2MxSz/65k3Z+HrfGvezxo2/fP9vNS4pxpox+jy5NzGbIX41P/283hXq55
vCbmrJcKx7+KvPaLPm+P7iFXR9dn6PcdD/3v2/56X5XqF/gjcQ0iZOuH8DHQ
0hW6l52tIy0dO1qGSr8zAHxRz9511674P3z5zVaBFzepofF///Fxp8CPw68r
gNBzpPFoZ1v6WafxGWn2eRObr7M5k1T1MKeyeUGbp1ml7Jtn/1P5dSuhsarJ
n4idP03pPkA8/T0lJOc/pqq8ugNmnz8+7odYXZ2J3xuwmdHWqr9nb7Ve0/28
s+O9STD/js/fdY1z0WI++6xzz2PMeLWpx8vIPMdLqS3U39nthmL294/DtbnL
MKZPfVu2TbW+8TmT8R6EFiq7zl/onl4/+8tfKx4/Qr4KXffV7l1XOna0DJV+
ZwD4op6969au+D98+c1TaS/OQ861PC0KvDgfNanm3zkj9BxpPNrZln7WaXlG
ms95zak123LInpe1dB9njEWyvJfQnKtiHV6BcXwo3QeQwcT7SKeq0qs7YD57
dqLXssA4Nx5t2Os65jkx2YbAONgYN8Jzzkc7s/fuVqn7GIPZf4+zMek8zDnj
ZT1fcf/E4NdlaXdmjAePP9d3YGOy879J2V+Yh6n4bzKkQ6FrYbImJqpJoWth
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
iLeI72Lw63xitH5s7N5gzm8TTHx+Oet38qAboetJ7PpeMqZevy72nq9yXhi5
72auErdR5Ds1ifkqGEv0HJSKJTD+En6dxHrHRXz23GMF00hcgwhp1FC9ll3j
0lVvNuQD5V4Tc8yPyqVjPzOXXHWOQ3HY82fr7WqtJUQoVKXfGaA+nu/uL170
pMCDi62ta3J4dcLe3VL2rbPi2/3CCD1HGuGYavPrJPK2q1zxnsS+jYx78X5d
H+dGIM71yTFjc7/qcuZQHoFr+lRV13CafQ3r0+n1J3DcWv06iXrhIrGPIXQ+
rFYjbUg8r9b5RuV7sePXycVfwq+LHbNi65nkHiuYRuIaREijTuu1rAc2VWdm
Pb5TH6jEmpiuOHLJ1qjl9rxseyFx2Lq7GmsJEQpV6XcGqA9bq6bAg5uj1tWP
x/ZmW8Kvi/TuGldf3n98vFXgv81R1TnApSD0HGmEY6rNr9tExvqQK1ZH7NvI
2M/Fr5PYG2x7cszY/KnKNemgLELX1KmqfF6bz17doR9rwWPX6tfFrsErcu+X
pL8/x9ZAW03tXSfhdRb5Tk1ivgrGstUSS2D8Jfy62Pk9qz1Jco8VTCNxDSKk
Ucf1Wvb/nlMvduoDlVoT0+VHpZL1Ja3HWaKf1mMLjcOe1+N1T1kTEy1Zpd8Z
oD6e7+5vFXhwvrJ1gK/+Pn5sb96U9upO9b/9F//9p39++/Dpz/7q67m1dY0C
/22umuQTFSYReo40wjHV5tdtI2MtlgsXiP0s/Lo+1tixsnpzdLxdxHHY+xMG
EZqrau5TIZjXXt1Ba6HjV+nX9bHH3HuOpeKbgZc4boX6M7qvnMA5L/ltTvR6
ioKxRN+fpGIJjL+EX1fltWpk1pBtS8S+ZCSuQYS06XgtTLu3W8gxLn/04+98
oNxrYg7FkUpz/UxpWY8tJg5bh3c4BmtioiWr9DsD1MXz3f1KgQc3R84c02N7
syntz43p//zPfuby7hpXX95/fNwq8N/mSM132eeO0HOkEY6pqjWnTPzfvW2u
WE/iFq8ZC4ihJr9ObJ9COz8jjzO4xxKA0LXtvN5NofqgObzEeGnG61Girx9T
t18ntSamHeNViT4c9SX2Xnqs0b4InPNi775GwKMVjGWrJZbA+Gv065o0ozEZ
t8T12ZaIfclIXIMIaZOtz7J1WrF1cQcfqMSamK44Unh1oX6mZN8OccT6bLZO
T+K8I6RVpd8ZoC6e7+6vFHhwc7Q67cNje3NR2o+b6939d3f/2uk7Vlpbt049
T8EPoedIIxxTNR5OH++2llhP4t4IjPPZ+HV9vDuBeC8i54zNkav3TKAsRm4/
r1PZa+DNdARlmNHvqHpBofFthLo9N3aJmpeDHkrdj4zc2p5Wk88ygXNexK8z
Qp6mYDwbgXiK3YMMft2cuHe5xwqmMfh1aIGy60hK1lhZ/8/W7JXu18GPklr/
0tbule6TraeT9Nfs8djDDi1Vpd8ZoC6e7+4fFHhwvnL+bfzY3lyV9uACtHL1
5X/6nZ/s/vQP/5tPf/Df/tvSHpyvWMdNEULPkUY4JolcSLZ1p0zhNSUDY5ba
4+rc/DqJvOcm9ve5+gt1Y/ZeisR1XvS688Hsawrn9jf4WjIV+3V9/LH3oWNl
9+zM8Hqnyc6FwDl/yjA0pzFfSI2TYEwS185aKp6A+Gv067LX5Aud59ljBdMY
/DqEqpL1DY/35guRrdVjzUiE6lPpdwaoh+f61sJcu/rx2N7sFPhvc+TMKXVv
361f9Omg+3//P/5UgXfnPCdQBqHnSKM0rpV0XAOxbiPjzJrDM/v83U5ojM/N
rxPLfWqf11A/Rrb+yCV7Hym6h1l/TcbkhYM8u8g2D2qEh2NO/NJrpmbz7Mz+
uSF5H/Z6jgmd86x1YUZubz9tfl3JtUVr9OuyfudjZJ89bc7YzwGDX4dQlbJ7
6oV4dbZWsHTsCKEwlX5ngHp4rmstTGcd12N70yjw30Rq67q373bHfl0F3l32
b4thHKHnSJMgLolcXJb8xEs71wKxrnPE2scrlr8zZ+bX9TFLnO8i4w3nh5Hb
q2x0XprMvp357NMVeVaYyv26vg/S97Jd6j4JjXvQeTBC9dUpx+ckXtGxEoxL
qr6/kYqpQPztzDZ3Am3m8tPttwCSfnqbI+5zwuDXIVSlrO8W4textxtC9ar0
OwPUw/Pd/a0CH85X164+2Fo1Bf6beG3dmBR5d23SCQqzEXqONAni2grFlvxb
diOTD9+ZDLkUI7sGmtU5+nXSdSlFrzVYPgmu+7H7mL0frhL2xV5/1meSrnPd
zLkHm2X4danqha/njKVnrPZZkWJ919uZMUi0Wct7yfckGJvUM7TI3olC86Cd
2eZWoM3kXrEJW5dYdKxgGqH5hBDKrNA1MW1dXunYEUJhKv3OAHXwfHd/ocCD
m6PVaR8e25sLBf5b8to6pd7d04uy/10N4wg9R5oEcUl9F25zkUG5MfM57zBa
N2Lk1v1JlksxaXIoVmfn1/Vxb3K9ox2JvT8hmETX/5hse/Y+3gjE3vTHSt0H
7/y/WYBf1/dDombMpad+jFaR8V2adLnlp7nx5Z5nAeNlPdhNivESjnMnFNcm
dCz7uT97r2NTxq+Teidez+3vjBil16kNGiuYxuDXIVSd7B52oXvX/bu/+VvF
40cIhan0OwPUwfPd/VqBB+cr599fj+3NlQL/LWtt3Zh+efkffrr9j/7003/y
T76ktu5MEXqONAnikvqO3eqQN/TNw1r/bXP0+8nv741cjuLWN05fzD4nlWrP
tXP16yTnp6/WufsJy8Hs8/i5PbtjPfT3N3svvuqvIZfW/b+x9+BtgTi9vpsw
C/HrLBnG+eFwzj1isd+WWI/O1ujtEsd1FTBWUutJ2zFZhZyvkdialGMmHOtG
eH41M9pen8z5WWv5mjJ+neR+cLPn/URs9tmScp3wWWMF0xj8OoSqU+hamKyJ
iVDdKv3OAHXwfHe/UeDD+Wrt6sNje/OgwIOTqK3bSvh1Gb07auuUIvQcaRLF
Ju0x2eNtzD5Xc5ojtrnEsfzgaiLWjWCcNoa1wPitR/ojpbP06/rYc3ofdu5y
D4UoTHnPTrvOrr7OYtKtizmkndnni0+V81x7r4N5MlaS9YizviUaianJMX4x
MTpiTlHXeajpvTSv3/Hsf7817nk+ay6YQu8tRvZ9zs6XZm4MJ/FI7iEqOlYw
To77BUJIVj/7y18b9eN+8fMfsiYmQgtU6XcGqIPnu/snBT6cr1797Wu9LwX+
m0RtXSPt1WXw7trkExSCEHqONIli25R+Ph6pnYhV8tvng3Zm7yF6ja/Z504u
+3HLlXs9Z78u1TpyLjn3YwWYi8GzG9KstZPNgvw6i0nzDNOq4PUoTRpv8/At
0aVPXH0M9tmZowbxO4WMV+ZxjNFqRuyl/DqpNTFPrwX7vZrXvc/s7xP23Ueq
zjTJWME4Br8Ooar0w7//h6NrXV7+6Mff/jtbQ2f/f9e/6/76V4r3AyE0X6Xf
GUA/z3f3bxR4cL5yfif5WN9amI2rH93bd5vUfp2wd8eeS4oReo40iWLTlD+c
nMcmz5pi217H68VZlcp7na1f18efa9xXpfoIy8Pg2Z1q9j6nZmF+ncXk/Qah
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
O/LvZ62L6ToHIXHGMNDHKv26/t977+s49/wOtIdfN/zvZ62LWWIsYNlYH0yB
F+cj5/coj+3NqmAN3fWLmsynDMCLLsx7qVVzauxCxiX7mpgvba5CxyOizZCx
aQS7PRVfar8uJA+f7G/rwHiagHZi1gC162IuupY88Dy0gW3h1/0Avw4AAMDF
gEdx1edcRRQQU7Ic5UB/vWMcyM/uzPhedbuBHK3VWqhfST2GGW167Zk3cB5i
ZT2IjQnc60rjtXAUm2sOrTx/66rNswqp45zt5wyMq3NdTNe/nRtjLKmvpdg+
zv29mbEuZsj59TxGjX7dyuN3c/26WetilhgLWDbPd/crBV6cr9auPmSqsbM1
dLd9Dd0q71kCmEcXXidUq7z30nr5d9eBbTSJT9tpnJvQ8Yhoc6t5XLr0fl1I
/5N5VV0mv65vaxdx/T34Xn856a/1tcBx8Os+C78Ovw4AAAoxkEtvCseULEcZ
29+B/Gzr8btmoG2rYI/p5PivcsAxx/Rocx2alx8Zizna9cexNSuXAmOo7lro
47p0xPVg5nmFLo9g9nouA/OsnfiN9Qu91sV0nYO5McYy0Mdq/br+N677ltXl
yb9T6deZiNpjj/acfrbnb2f5df1vXONj9WpdzNC4AMZ4vrvfKPDiNNbYUUMH
VdJFeD0Vq/Ucm9D9urLV2HURtXVWEe1uA9prBLs+FV9qv26naU50ef26mBo7
K1WeXff9e+A68lj4dZ+FX4dfBwAAhdDoUaTMUcb2dyA/2874/WYgV2v9l+D3
3picc0SbrrHw8oCUzjt1MfVxDc2ZWDnXRJyIJcjPMZ7rYrrOwczhimagj5J+
XdR1GjpGxmNdzNDze9JOrF/nirOZE4NAvE+ev53t1/W/81oXM/c9Hc6D57v7
RoEXF1tjdyvk0dnjXFFDB7XSRXo9FcvbO+n29XghbbQJT91xfNuYscjcbiPY
9an4Uvt1c4+d1LvIfT66vecWcw3a36/kRiCoDxed+3uFdcQx8esyzfmjuPDr
AAAATtDoUaTMUcb2dyA/286MYch/iXonMu4apibmmBPtucbSd081jfNOY0wX
A3NFSuuZ8QT7OQPj+711MV3/ZtaACeGIU+yb2tj7W+gYGY91MWPO78Qx5vh1
t7ExzIzXdU/3rRMO9euG1sU89U/x6yAJtnZNgRcXU2PXBPpzu76GbvYetwAa
6cLWe/ReTzIHXXitz9rz+KFrYkb5IRli+1YRbW+1jcdJfGfj1wX2Nep8RLR5
ei8JjiGGbv+twpjnuA48Ln5dhjl/Ehd+HQAAwAlKPQpXfcUq4bGbGb+X8Osu
BuKwerUm2ozjuvLcwcebaGvIR/Jat07pvNMY01BdmpRm+VAxfo7xWBfTdQ5m
DpkIKX2S2GPHjNHA/cvqsv/fNfh1rjnvtS9mCAP34tbzt0F+Xf/boXUxj/1T
/DpIgq1bU+DFxdbYbamhg3Om29eWhNSOJfnbIJSIfni9w3ZxNYg2riRrcnfx
axJ+q4j2twHtNYJDMBWfNr8u2bto4LmIPh+dgF98uKd0Gb8BeGnryvOeMfte
1+HXHQu/Dr8OAAAKodSjSBaTQK482q/rjzPkXXyXOw845jrWj4lsy2sNuf73
ZzXvImJyeQkPfawhcs037z7G+jkDXozVVf+/L9qvM+4aN+/rpj9G1BgNzKlv
67piz29//Fi/zrm2rxH6ZsOzLd/vDoL9uv73Q+tiHvxT/DpIxvPd/ZMCLy5F
jZ2todtQQwdLp89Zh+TWV6VjPyXCN2g8jx/qh3zqfYG1kv6+UkQMIWPSCA7D
VHyp/boQj3iVoJ8hfoDI+ej2XnnsupjJrhNHvE3AvJ21X3vg+Wgj+pOlrb69
uW3h1+HXAQBAIZR6FJuhfH7kcZ3rwc08hohf1x9ryLuYva9Yf7wL4/YA1yHx
TbS1c7Tj/T6sdN6piknC23EcM/a8Sfg5rnF+6r0TLX5dkrlg3D73rL+FYsdo
6D5o9vW5xf26oT7Omacz2nE9a7y/cRh4HjQzfj+6LqbrPAV1FMDB8919q8CL
i62x2/Qe3bavoUtSBwOgke7tu11AHvF2+sj56cJr4LzeLwLzwa/GrousIXr5
/ZtOzh/5VhGxbAPaa2L6PzO+1H5dSP9Fa1O7+BrLRiAGOydD93h0adftPY5V
/Ah9F+Nl4Pk6yPtviA6/7lj4dfh1AABQCG0eRR+TKwca/felcftjc/PIYn5d
fzzX+AfnpofyzybA/xtpY8hnXM04hsZ5pyqmgXMZ5VmMnDuv+SHk5wyui+k6
B0EdjWRg7NtEx531t7/EGA3cx76NReD8Svh1Ll/TSiwXb4Z9S+9vQwbGsZkZ
x+C6mK7/PrujAAM8391fLKDG7sIq99gBlCYiz9+Ujn2Ibu+HhfTJ693A5uwj
8v0HPXUBXkS390Qk2n+loMH+AX5dF17juBbqn0SNZSMUy2WKudnPMVsHPOv9
vdvX/V32Y7QTisXrb+gOv+575y+0rZlx4dcBAACcoM2j6GMayl9G5WSMex24
ublyab9ubF3MJvB4Yv6f4/hvhryWmcfROO9UxTQwzlF+hRned9DLoxi4NtuA
OLz35ZvdSQEG4otaW9YI1b+65mlgPEN7aBb36/rj7BzHeYh9DvTHHtpDdFZt
88DzoAmIZ2hdTBXXAyyX57v7jQIvzkfWV2xKjxeAFrqwGq0ka+RLEZiznZOH
D90nb0gPfS7X+grNSTu2L9ZTlfQbnIoY721Ae83kgYVIncPv4jyq4HV/+n5J
1Vg2oXE44hLZT9Hjmtn2182prvv/LeX1MjleHX7dsfDr8OsAAKAQ2jyKo7hc
ee3gGruX314O5D9n+R8D+dk2NK7+mEPexS4kNz0QY7RnZ4a9OqvVzGOpm3ea
YjIJ9yI07rodr2MPeDFtYByu8VbhT5hh37uNOObQdTnrGneNW2A8Q/VlWvy6
oe82ojw7M+zVWa1nHkvKrxuLqfj1AMvl+e5+pcCLG9LDi67x6QC+T2Bu02pd
OvYpInL1K8/jp6ojKqaIsd4GtNeEthcQX/Icfhfn39rxsx7X5Dtpt/dw14Fj
nu18dHk8u1Ly+ka7w6/73hwPbWtmXPh1AAAAJ2jyKE7iGqo3mO05mWGfabb/
MZCfbecex3HcIe9i9rEncr+bkFx3nzsf8upCYlQ37zTFNBBLK3TsIe/60uO3
kn7dWG1pcX9i5JpcBxxraH3HkPuZiF/XH2vIQyzu1/XHGnoO2Pvb7FrTfs4N
3RtDPEURv64/lpd/GnJsgDEU1djZGrrbF62tj1h6XAC00oWtG2l9CfVrx3bh
fkE7ow2JdQjVKGKstwHtNaHtBcSXw68LycW7tO3n1WnNmL1WRfcrTH0+umV6
duxf9wP8usDY8OsAAKAImjyKk7jGcvlbnxj7Y4zloyf9CccxU/l1Y7nakLz0
WC3cztdz6MdwMxJbUM2jxnmnJSYzXNu1EmxjF3IuB7yYNiKOyXUxQ48dy0Bf
vxsrn/PRX4fOfchCz6lrnob07+h4U3Vd7czjSfp1U3Vn9n48mX/sj9NO3BOl
apmbkL6OHE/F9QDLpXCNna2ha6mhA/Cje/tuFZivnrX+fym68DUrZ/mRXaK9
5EooYqy3Ae01oe0FxJfDr5NeIzW3mkRjf1n5uBxr1tqlHX7dsfDr8OsAAKAQ
Ax5FEgXENpXLtznWTZ/jPNbGIwcdtDbkQD61DTmW57GtHgKPN+bZfer/NztW
6z7HfqzWYwyD16UbmHdNyLGk0HItDMyDoDkwsw2r1cTvRP26/pij4x5z7FjM
9L5iD/2/cd2DdhO/Ddr7wjVekX2cqutqZx5PzK/rj+ezVqT1RK/M6/vYlRn3
Sw/3waB9IQeuoya0r/0xR/sac2yAITLW2D31bdkaOvW1PgDa6MJ9plXp2H0J
zI+G5OVDx1KVIsZ5G9BeE9peQHxZcvhd3WukNvIj/924vOnS1gamlvUb1wH9
xq/7LPw6/DoAACjEVK5cUoHxbRLEEryP20B+tg09nuP4Qzn+0Nz+G49cd9Yx
7ONyzbsm5pixaLkWBubAWrivQzV87cTvUvh1o+tixhxbgkTzIuYe9CoegT6O
1XW1M48l6tf1x7Se3ZTvFqLYvfBS+HWj/mnMsQGGSFxjd6ihC/LFAWBPt68F
CslbB+//XYIuvIZw9j4HnS7Pznojs9fqjBjnbUCMTWh7AfFly+GHjHui86/q
fHT7e46GsQkZy6B3jg6/7lj4dfh1AABQiES5aNE8o/FYM2+GotaDGcjPtjHH
PDn+0Bp81s9YBR7T5rqn6oR8tTMB64g6YnLNuyb2uAliynotjJx/8TqEgf6O
5joG4msFYhm8xmOPLYHg9WMV5L0fxfLqvAn1ccjXb2ceR9yvOzr2lfHY89BD
T0LzVtyvGzmumusBlolgjR01dAAJCMwbWkW/t+emC/fR1gFtXWX0EQbz4t3e
G5l9jiPGeBsQZxPaXkB8ub2M0DknoYcuzI9v5EZ8dGzsudgpuE6SzoG+r/h1
n4Vfh18HAACF0OBReMY5tY/alLYJ86ht7HFP2hjyBmJrVGLGcGcEa7wG5l0j
dXzBmLJeCwPnJ8l30Wa/DqorvvXIb5L4df2xneMvcWwJ+r7HzBF7blcCcbyK
QaB7Y3Vd7czjJPPr+uNP7UU3pqf+tyuhWJL4df2xnf6pxLEBXETW2FFDB5CY
Lmw/qdk1ZxoIzN8G55e7smv/XR/FgV/3Ob7sOfzA3HysvvXq+vbVno+j8dG6
r52dzyuhPmaZd7nneMiYhrY1My78OgAAgBP6nP3p3ktJJBTvRR/z7VA+03z2
l2xe+0oqN9u33zj61kgdv2/jYmQcV0LHX5vxff6e+vGzbYrn3wbm3Uq6HYGY
sl4LA/8+Wf5zoL3B77DN3vNNMv8Hjt1KHFuSPs7Dvmi7iXvQYV+1lWD7r+ap
4LEvY8/vwHlcS8XoiPfajPuo2/7fiNcXDDwPVkLHflPD9QDLYkaN3Y4aOoB8
dG/frQNz2FE1/SXpwv2zJqJNW2uXy4/YncYakhuO6Os259gGxFckh9/lrSWz
a01eHLWt9nwcxXioA9Xi220lxyHkGgydd7nneMjYhrY1My78OgAAAAAAAACA
EyZq7LYvuqKGDiA/XZh/YPPp1frpXbhHGbUuRbf3I64Cx9xH9rjrgbbx6z7H
VzSH35+LVHNg6xpLzefDRX+NhsyjWNl726YTqKdz9Am/7miehrY1My78OgAA
AAAAAAAAB/26lsc1dJfU0AGUo3v77jIwp70pHXssXXgNz0qo/cveF9gJeAy3
3cRegiG54Yi+bQP60IS2FxCfihx+t/ekbgXO/8FjGvzmRfP5GMNeb93e45YY
pyHt+vFLuh9nyDUYOu9yz/GAtvDr8OsAAAAAAAAAoCDWm6OGDkAPfS68CVD1
Pnu331cupO+rRLFY78auYbjthv2up/5/u+1zvc2MNmaf68j+qJ1T3b7Osfh5
P4mp6c/pbX+Oh/zkh/5/t3PF+lhez1TN52MOR+O0GblOpry5w/itU5/Xk9hD
7rdB8eWe4wFtZXkX1HitH8WWbT4AAAAAAAAAAAAAAACkppv2iFelYwQAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgLT87b933RyrdDxQDuYCAJTg5X5z
cXL/eVM6JgAAAAAAAAAAAICc/O2/d/3pWKXjgXIwFwCgBL1Hd3z/2ZaOCQAA
AAAAAAAA4Jyx39S/6OGQr7Pf3JeOaeng0cAB5gIAlAC/DgAAAAAAAM6RPv/9
SUD8HQ3w/7d3h9WN69oCgB+E/hCAQBgIgVAIgVAIYTAQCmEgFMJACIRCOG9y
xznHVbZsSbaTtP2+tbzWvXNsSZYlOd07diZ0zKlzjurXn+3lz7a7d/vvZeiD
cb+83rtNX93WOZrOe8x4Pngv2o3I1/GdrfT52GfkDvJ1AAAAfEfydXAba8yx
9A1/PypYo6w1G3vQfF2+nf5sh7XbxkfydXxn8nX3I18HAADAdyRfB7exYtzv
cO9zuaVgjfp17zZ9dZ8kXzfO2+3XbiN/ydfxaP6Mw+c/2/EW90L5uvuRrwMA
AOA7CmLhr0McpHU73Ptc4JEF8bvSXHod5uW7nN2/sdnLeb/LzWzvDvm6qXvL
z4r58K3mxC3J1/Fohhz9TfI3wTrjM/KNyNcBAADwHQX5uv292wRfUU/ce4hX
5XP0krd62rrNj+LPue6Gvvg253xPt87XNRz3Y8jflXJ3h7Xb+t3J1/FIhnvB
zfI3wRqz37pO/pKvAwAA4DuSr4PbWBL3HnIUedzwZau28r09ar5udPxTYU6c
t+e12/udydfxSM73Pfm670G+DgAAgO9Ivg5uY4UcxW+xK27h0fN1o3IO3/3Z
063J1/FIss+s8nVfmHwdAAAA39F3zdcNz2fsR9uPjjJ2WRn7DZoa1XuTOm9R
T9CHuy3qGdX345b1ZXUvzde9LC1jVFbeD6vmN4Lr2jy/thDM+5u8YzPo7036
Y605+1nydUNZV/Piz/a6sMy7rRNriMb5grLWvFY3XxfWuNc31rfonrb12lyo
o6mN96ovfXwXpnzdRm5xj6wZ50m+DgAAgG8obZyvG/4mfxttPzvKOGRlHGb2
L+47/P3/K4jBnLdjRVvOx7+m8u8nnbffQwy5KcaRnefP4L/lz1fldU72S0X9
T1vXk/77/al83OXbr5Z6sr77lf23uWv2PtS37z2vyjYuzdflsavWd2pOjf3z
djrPgd7YXEX5/2RzM9qu1ofW+R8cvxvG3Gnm3M/77BrL/tC2oD/m1orucTea
r69rn9vSsXrr8gvrSev6exm/pes1249//ttzNlZ/lfataM/L3NzI9n8ajll1
/V56rYYxOrcuNK33o7J/pmBdGPriODMvmufegvreh3m6K5S76do8qmPuPlhs
Y6HMufvu1Hy61LdvaHtURvF+0t5LYd15nbPtrSx3jc/GTWWUxu/w3+Y++3Xd
I7M6msb5cH7j/y5fBwAAwJeXts/XLf5+7PD3+7iM48z+4b6p/HtHl634u0fp
bzxuLuYYxZKqf0spO8/T8G+7mRhKvp337XlWcJ+mY5uL6hliQS3l/zteUkWM
Mh8jw7/1XLNFz+XMtPGfvI2Nx3fl64Z+yOf53Lg9NLSrtfzJ6x2U3zT/s2Pn
5ny0tZSft+0pTf+2Wmn7VTPOhzrPa8Jrms4DlrZDZR2Lxuqty4/mRqr8fceO
deK9VPZQVr7/vvOc8ut7mNj3uXE8VK/fvdcq/Y21t9y7ztuptl1DHeN159fw
b/vGvnhrmHvj+t5G59lS32FUXuva2dQ/ozpa74PHyrI3v++mOE9XtbX000T9
q8znoNw1Phs3lTExfk8N/dr0+WCoo2eNfR6OXdRHAAAA8NkEsaL9yuXfO193
ieHVxHz2hfJa43HVsaiZ89x11ns+pjWX1nNe1fU0xoPy7XdH353j162x4qbr
1Sqvp+P45nzdwrF7qCj/aaKf30ZbbRui5+ua83Uz7arZqp6LWnnc1dYZ5abW
vq6Lxuo9yg/6ffZes3CchOtEuo5LN68nwzjK6wtzSmnj9bvnWg1tWnLPPFTW
8za+3gvmxu9S/07U97/+66zvecHYq/59xi3Gd1b+5vfdtOC7IDV9VHGOebn7
lcq9d77uMn5752nVd9EWjsF8bZOvAwAA4MsLYiH7lcu/d77ufH757xtd3sN0
HOIBx4lY0TnWcAriCKeh3P1oe07l515mn/UIzvMUtPk5q/Nlon018ccovnmu
6+fw33bDdjm3aN+aevJr8Dac7//qGLWldD6HBX133n4N1zq6XlGcaD93Tq3y
OjqOz2NXp5n9S2P3Mo5+pP9+2+lYGLeTMbmg/6aePYpi+LPvpAuu7bGir/J1
7TImLuN6vP0snHtPvDov57L+1I67w1ydQ73R2nAZ3+drumjOLh2rFe1fvfzU
+PuOqRxHfrvMj2G/pnUpXefa3jvOJb9upftTlNcbr99zY2H2PtF6rVI5B/CW
rtfg8/8vPXezr6grn+fv2bm1zPea/G5e3yn73/lcPwTHXPbN/z26R5XGXe13
gErj+1A5vic/t6T59W/xfTdd/87ZeP/fwfX9d6vpo4o+bB6XleXeO1+Xj9/S
Z8zSGK797BfN7/f03+e/p9E1zufm1f20tY8AAADgswn+Dt+vXP6983Wn7G/+
15oYw6isKNYwF8PapThONvksQ3Ce45hUsc1DvCOKf9X83lEeozvXtZs4JorF
1uQ1nkYxmmL5o33z/pt8xm6i797nxnThnLp/d2qing9t6zg+n6uT/R6Micm+
KPR7MSY3jPOmWGahr3czx7TO/2gsTM77iTnUGq9eOu5mnyUdjr38ttnsMw4p
fv7qMHPMorFa0abVy0/xdw+Ka266fmfp5PuLW+ZHcF0PDedR9U7N9N+a2nKv
2AfHzK0jTdcqXd9TeudCTV45XxNb5nt0jz701jdzXGmd6F6Xp+qbqLN4file
A89t23Wc12b33Wz/zfM3NXOxs9xHyNf92+8Vc+3q+xAV8yX6PkHv59mbXG8A
AAC4t+Dv9/3K5d87Xzfeqn7PaKLt1XHXQoxtLpYSxb5Oc3GU0fFRbnHXUF9V
XYUYTLGeHlHfz+wf9V3L+zqvchrrnMmHOrrLj9o3NVdTRy5tOC7KAZSel8vj
d7XPfOR5ktac2LGx/dXvIwzihJM5g8K4+2fJuKud7y2C81o1R9PRnk3Krx3z
hflxqCg/+o7DMdgvH+PV+f9gTITP0QZjr/adjlHcfTexf8s6HJVdOxei/M1x
5pi3oL7a98pG13LumeUl9UXH1q7LTet5YR08VNQT9cnUb8vd/L6b7S9f11BG
YQxW1xscPzn20/Vn4FPNGrVGWwEAAOCzmoghtWzFv6FXikmska9rfl4qXce4
m9qe4t+2mXreo+n78MHx1bmWYf88LtdSVx6HmXyWr0fQvv3EvlHfHRvry/uu
WF+PvH0Nx0Ux8Lm4XD52W3JWV3mAwn55fvhQWX5rjLElX5f3VXV8cDi+Kc5d
GHdNc2HrcTfUkefY5/q8a6w2tGeT8oNrUco15/m0lpj1bD4txWt/b5z6WNiv
e9wEa+vUfaL6WgXlhm2fOD7v27l8ed5X523XUF/0nZype3R3fcHa1Dru8vX2
OLFvvi4tGd/FZ/kK61+xXYUy8uP3DfvL17Wt60vnS34fKea3C2vgfsG53eR6
AwAAwL0V/n5v3R49X1f1OxsV5cy+ey4oI4+xFWP5wXmu8btHYX8H12XyuYLg
+Kvfo2tta0Ud+djcT+wbxQ13W9XXI4pdTWznuNg5p3AKjpt9jiY1vnMyO7Yq
19DbX+n6WZE183V5Hrm4b0N9U+vbFuOueZ2pqKO1zz+c0wbt2aT8YNwfC/vl
82rfUEf0vsqrHE8wFg8VZefXKRxP6TpuXvUe1dHxLWO86lrVrhsVbcuvzWFi
33zu9Hwvp3rNCOpryYNF+Yfqub5wHWypp2p8F9q0+X23t/97Bef3e2hzy3b1
uS8YD/fI17WuG1djY2LffGw0fcYcymh6RwUAAAB8BcHf7z3bo+frqp8tmmh3
c+5sKCf/rnoxPhKcZ0/s8epdlZV1tT4TdBV7bG1rRR3VcbzgfJriUK319Vhh
nv0ztHEuV7coF1to6z7Yp6u/gpjfmvm6vN27mjZlZVzlHRra1tPXTetbr8Y+
33pub1J+MCaPwT55TqznexGnrIyrfEhqWPtHx1R9DyJdPx94dZ4z9VTf3xrm
wirf4QjObep9jLPXu6K+ltxld33BuPtnbi2faWdYd7C+9vxWap4nKT2nevP7
7hpjrLF9q9y3g3IfIV937Kizdj3I62p+B0OwFsjXAQAA8OUFf1O/DjGYlu0w
Uf4j5Ot6notbK/Z4FaOb2Hdx3D6K1aX4+Yz8uh8a63n0fF1PrrMpbthR/pJ4
36n2GgVjd41nTq7qDvqrap61rgm182LNMRn0/76ybZuvb70a+3zrub1J+cF1
Owb7NL0btFDPbNy7di3OjjnVrMu9c290fPVcadjvdY1xnK7znC35s31HfS25
y6X93j3uF6yDm4zvQps2v+8uPbeO9i25bxfbudJ1Wpqv6/lsXLse5GtZT13V
awEAAAB8FWvEu2bKf4R8XfH3aBrq7P59ttr2tJ5nQ337YJ/8ui/eGtp3jmM/
D+f7K318b1Qe46kam2v03Q3mQm/ftr6rNO+LNbZjRT1Vz7Gm6+/MT86t2mub
VlhrRmVVxTXXWCeWjt3093nAl6Gct2zL3w9Z1Te9c7uhzZuUX7Nm3Gp+DHW9
1l7bdP1cZ/E9zhPXtXur7dOJ/fI5cyjtOyWYxy117jvqa/lOzaL68uvbeGzt
Ohj9Tt5W4/vm991sX/m6hjJWmi9d60bq+xy+2j0dAAAAPos1/n6fKf/u+brO
dq/2zEsQt9hX1tn1O1Y113SDeN5sP6e/35XOn9tq2cJ+K/TdcYt+WyI4n2Nh
y/NZTWOhcPzS7RjUE/1e1WRMLv2Njee5hrljauPU+X5r5utq6wz3m6mruYyh
H38GfVm7fbl8XYrfN7gP9rtlvi5/lq+Yew/m7dR7INdu/xb5uqu+rxFdxxvU
eZP6WuZgcGzvOrjl+P6O+brJ9jWU+63yda31DGXI1wEAAPDtrBXvmij/s+br
8n6ZrLOlPaU+Ds4z3K+j7VflbBDPm4rbnPM6S/J0s/1xj7hhR/nV4zL9fe5w
vP8pVf7WUXAea2zHynae80cvUVvT39xFnl+afX9a7bUN9vuS+bpg/57tK+br
rn67szAOb5bPGOo7ZfuWnq+u2m/Yd+32P0y+7h513qq+ljkYHCtf93/ydUvK
WGO+rL1uzNQlXwcAAMC3s2aMrVD+Z83XLY5DldpT6uOgzkNnfbPXNGjTa2r/
3cIPW6Et51xd9AzQ+1DnyzBGojZWj817xA07yq8elyl+VuhYWU9+Hm9Lr+3E
mH0qXN9LvZct2uecw53NQdZe22C/L5evS9fvVxz35bmc52E+/ciOa43rLl5D
b11+un4+LXyWLRonW82PQruunptLDc/hDfvfZP2O6prYb5X1MwW/+3eDOm9S
X8scDI7tXQcva8MW6//N77tL+rBHMNcm29dQbtOavEYZa8yXhrmyeI1fo48A
AADgs1kr3jVR/hoxiaaY0EpxgsVxqFJ7tox91daXrp/lCNu0VFDP/56/qjy2
emzeI27YUX7TuAzO6bzN/gbMmmO3RvqbW2x9fvL8XF7t84K1ceo853GP368L
2zZTV+/5XWLxu4o6vkO+Ll9rwvdJBv1d9buLC9q1y9fAYJ/XbJ/JNbJmjV+x
/bXx+XzOHDrry8fqV/39ulvl6zbLcay0/jX16a3OrVDfanOtdU1eo4yV5kvt
XMn7bddRl3wdAAAA384af7/PlP9Z83Uva8QJGmOBa8S+rp5NSEGOJ7juVTm0
xrYclsS6WsbmPeKGHeU3jcvhWp5ax2HQF7eIaZaeoxxv53N5be3X2msbrDVX
eZGGOvNzCdu80rirPb88J1r1fOJw7JfO1xXWmlKOdZW1vbF9+drynP33fLzt
ZsrLx0LXb51Wtr32/vW6dC4M5eR56d8T+072a2V9N8sPLhl3DetEdf8ttdL6
19Snd5i73Z9hZsrd4rPxI+freuqSrwMAAODbWePv95ny14hJ5L+RdZzZf3Es
OGh3V+w/iJ0V33PWGnupbHd4/kFsdfVnTII6Zn+rLDv+VDs27xE37Ci/eVym
OA9xmDkmH3PdeavKNua5uvN1fxr+/TweZ58JnCm/Nk4d5ap3HfVd5dhTIS+2
0rirPb+8TdW5idZ1eI019FblpzivPbXOVudn1hLM49eJ/1bzm475PfHnhm2v
jc/n47hpvR+Vk78/tFhOsGYfO+qrvu8uvUe0zMGKdh4L+/2oXb+WWmn9a+rT
JX3YI+jLyfY1lJuvQ5PvwC2Ukc+VR8rX5XU1fycs3eG7FQAAAHBva/z9PlN+
HpNo/q53un724Diz/yqx2CBO05x3SA15sSD21ZxnqY3fpOsY8fvaMb0lsdQU
5172E/t/yXxdoV2T16q175ZI179f1xWjn6mj+tqm6+eO1ogRtuTYi21bUkaw
jjata7Xrwmj/VdbQW5SfrnNXs9c92P+wpA0Vbcznyfvov+Xtn83DtozRFdpe
G59fJU+UrnOvxWsZrI0933HJ14xi7nPpPWJJWxvXwfwz06Glri3aNFFGU58u
vd4d7dvkXpoa3r0wUUY+dh8pX1edd58o4/XW1xsAAADubY2/32fKXxTDS0Gc
ei4mtDQGMionjxU0PYOWrmO0k3GzIPZVFbudqe84sW9Tv7YKxlZ1+YW+2Dfs
X13XRHuL9fXoHZeFOTD5PE1wLpvEudL1s3z7DepoiVMvzmOk63zBVPz+s+Tr
8nP69Pm6YQ3L1+jzNvudkOC4zfJdE3U+B+tw1Xc0UvwM6OrvNB7qqr5WwTg7
NtYVrXW7if3zdW5y/8r6ivfcpfeIJWty4zp4k/G90vrX1Kdbr01z9bVe88ay
dw3HRmvAI+Xrot9bbfnsH32ela8DAADgy1vj7/eKOvK/2Q8Nx+bfH56NCa0V
zynE8vYNx+fPTUzGzILYV1XseXR8/n3muVhnHtM7x0YWvbswKz8//6p85xCH
in4LbT9xzJfN1w3H5tfqn6lrleL3aG7xG4V5v6/+O1ot17YQ46s+73Sd75ub
Q7fK11X9LmVl+TVx3U1j4kvLH9bm6N5QtYYV1vbN3ilZqPM1mKfVbdh6/R7V
U32tgvnzPjV/smOfgms6+UxOsGZX32eG4/P65u7Ri+4RLXMwOLZlHYy+J7XF
O6/vnq+rHV+9gvom29dY9qm3/1L8XPHD5OuGffN7cfUzdsHYap4zAAAA8Bmt
8fd7RR15XKE2pprHI6tiGi3xhBu3/TBzTBSfqIqzpTg/M3lcivNi7y1jYCgj
jDEH5zPbd0OcMYrDT47Ne8QNO8rvHpep47vmwfm0xgPPdb5MXbNg3J2Gfzvn
JlZ5v2rrtS3Mo0NFPdEcmnuO8Sb5umG/5thnivOPNWNntTV0rfKH8XgojOue
tSuKd7/WjttRew4NdZ6y9ub3iep8W4qfr2ntgx8VY7z6WqX4twTP6/mu4rho
3Z+7X5TGwmyOPuj7mrVl0T2iZQ4Gx7aug9H5rTq+V1r/mvo0GF9b59mrP4d0
lJ1fo6WfjR8tX7fmvbh5zgAAAMBnFPz9/nv4t9Zt6p1x0d/e78O/P2X77oZ/
z2MyLXGq6nhCRf9EeZJL3OtHsO8hxXHHmth6KV/3T/ovD5L31zneGsWdq55r
mIqLDP8tP8f98O8/x9eoUHYpnnwI9v2Rrp8PzPt939B3x7lzD8pYHMuaKX/R
uCyMj8PE/lE+9jKWXvLzG67BfqjnraYfJuZHzfY2tGMyftxzbQtz8Fzf1fN/
6e97u/Jrf1kLV29bbxkpjtH+yuf5cE3yc3rPrtND5euGPoi2n8N5TN0PLufX
9GzZxNg9DXXvs/1L8+PYUGf0HYZ/x1tL+4fy5tbvXbZ/9fo9OqZpLKT42cX3
4dzz9kzd748VdUXz9sN8z+fw8G/R+lDzHtVF94i8fY3HtubrSjnQ9+H677P9
d6Px/aumntY2Fcpo6tNUyLMG1/lH/m89grom29dYdstcuXy+nFoLHy1fF+Xv
L/et0r04+jzbNWcAAADgM5qJd7VsPc/61G55TPI4U1dTfLGij36k/pzE/+KA
NXGjdB37iuJStVvL796VYr7V20TZ0Ts6x/1SepbuNTX8NlrQd8fa8x+VsTiW
NVP+4nGZrmNf71Nja4WxO9sPK9TxPjVee65tKseqW9pU85zDLfN1U7nR92H8
lv77IRvfj5avW7K9Ts2BmXasMT+ODfVF32G4bF3vq03Ta2zVNlN+81hIy+8p
te9OfsuP66yvdr7n9e1r2jk6fnzspvm64Zjz+D5tNb572hSU0dSnM3Pod3a+
k2VVti+vY3GZWfm9Y/a85Z+RHipfN+y/ZI09po/3cfk6AAAAvrzg7/febS5O
0BM///fdXi0xodZ4QmU/7Traf97OsdTa90/lsa/LsxAtsY7J3MdE3c8LYipT
+bqnjjH2Ojq2KrYU9N2xow8Wx7Jmyl88LlPH724NY3fJPN/PtGetNSSsp/fa
DuNn6rv6pe18Pr1ztqptvWWk9tjnv+tBVs9XyNe9rjFHU98a1X3NJ8Zk97NA
aaP1eyi7ayykv2vDqaM9Lb83+Za3LbXnL8/39drfgszHyb62rcPxH9aZxmOX
rIObjO/eNmVlNPdpqs8Hz5ZVUdfqZWbl99yn/n1PQTbHHi5fNxzTkzc+Bm2W
rwMAAODLWxjHaY49pfn3+VxiER/yXOljruw4U0dzPKFWKr/vMt9+tcZCgtjX
fvj3c77lNU3HYy+/hbQk5vs0tKE2rvI7Be9tmji3uXLP5T1nx42P2Tf03bHj
/BfHsmbKX2VcFubsruK4/Bmrqe2UZvIhKX4u4C2V32142X4VxsKpUM+ia5v+
5g1q4qHnth8ay75pvm7Y/7IezJ3P63hcpI/PYny2fN1pNLau3nG4Uptqx8l4
ve35bkSUa6h6nmym3J71+yXN/7Zc91hoaNOlPyfbEpSfr2dPw7/XXMtTCt6j
2FjfvrG9H9abxmNvtQ5Wj++lbRrK6OrTYR2YG1dN78gt1JOXWdW+jnpqPlte
zZPUkM9aOn6HMrrWg9FaMPe9gg+fnbMxJl8HAAAAG0l/Y87P6WMc/+o3tR7V
Fu0PYl9XZQ0xt5et+yx9/C2b8XYY/n3J++desjKfU2Ocln5D3CwfR5dtX3Mt
0vUzLG+t1zDFeYvF8dWJ+i7nHZ3z6vmfrRXO5+Wzns+jqJgfm43RtRTuT4vX
74Vt+hG06bCkP+fyD4U5sqjOr+Czj++xYVwdvsoauMVny0cTXLNPex8GAAAA
vq5Uka+De0vXvx90WpC/fc3K6voNL+D7mcvXAQAAAAD0kK/jMwjG6WHFso7r
tRT4yuTrAAAAAIAtyNfxGawZI5evA3rJ1wEAAAAAW5Cv4zNYOV8n3g50sX4A
AAAAAFuQr+Mz+DMuf67xTNz5PZpZOe+9v4MHfD/ydQAAAADAFuTr+Az+jMvn
bJyet+eG45+Cse5dmEAT+ToAAAAAYAvydXwWf8bm7yDf9jY8M/cj2/ecn9sP
/+11eI4uP/a3Z+uAFvJ1AAAAAMAW5Ov4LP6Mzd2f7RTk3Xq2N7k6oJV8HQAA
AACwBfk6PpPhubnXBXm6c77vcO/zAD4n+ToAAAAAYAvydXxGw7N2L0PsPHrX
5fidl7+GfX/MlwxQJl8HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAMBn8v9EdEDC
"], "Byte", ColorSpace -> "RGB", ImageSize -> {198.93999999999937`, Automatic}, Interleaving -> True, MetaInformation -> Association["Comments" -> Association["Software" -> "Adobe ImageReady"]]],{{-50,-1520},{-130,-40}}];


(* ::Subsubsection::GrayLevel[0.5]::Closed:: *)
(*AdriaCLIM Colours*)


AdPINK = RGBColor[0.97, 0.22, 0.49]; AdBLUE = RGBColor[107/255, 0.81, 241/255]; 
  AdBLUE2 = RGBColor[{7/255, 1/5, 137/255}]; AdYELLOW = RGBColor[1., 0.8, 0.]; 
  AdGREEN = RGBColor[0., 0.6901960784313725, 0.3137254901960784]; 
AdGRAY = GrayLevel[0.85]; 
AdFONT = FontFamily -> "Open Sans"; 

RDCols[rd_] := Blend[{{-10^9, Darker[AdBLUE2]}, {0.01 - 10^(-9), Darker[AdBLUE2]}, 
    {0.01, Blend[{AdBLUE2, AdBLUE}]}, {1 - 10^(-9), Blend[{AdBLUE2, AdBLUE}]}, {1, AdBLUE}, {10 - 10^(-9), AdBLUE}, 
    {10, RGBColor[0.772061, 0.95, 0.998703]}, 
    {100 - 10^(-9), RGBColor[0.772061, 0.95, 0.998703]}, {100, RGBColor[1, 1, 1]}, 
    {10^9, RGBColor[1, 1, 1]}}, rd]
    
RDCols2[rd_] := Blend[{{-10^9, RGBColor[7/255, 1/5, 137/255, 0]}, 
    {0.01 - 10^(-9), RGBColor[7/255, 1/5, 137/255, 0]}, {0.01, Darker[AdBLUE2]}, {1 - 10^(-9), Darker[AdBLUE2]}, 
    {1, Blend[{AdBLUE2, AdBLUE}, 0.3]}, {10 - 10^(-9), Blend[{AdBLUE2, AdBLUE}, 0.3]}, {10, AdBLUE}, 
    {100 - 10^(-9), AdBLUE}, {100, RGBColor[1, 1, 1]}, {10^9, RGBColor[1, 1, 1]}}, rd]

GeoPin[LatLon_, col1_, col2_] := GeoMarker[GeoPosition[LatLon], 
   Graphics[GraphicsGroup[{EdgeForm[col2], FaceForm[col1], 
      FilledCurve[{{Line[Join[{{0, 0}}, ({Cos[#1], 3 + Sin[#1]} & ) /@ Range[-((2*Pi)/20), Pi + (2*Pi)/20, Pi/20], 
           {{0, 0}}]]}, {Line[(0.5*{Cos[#1], 6 + Sin[#1]} & ) /@ Range[0, 2*Pi, Pi/20]]}}]}]], 
   "Alignment" -> Bottom]

Mag[x_]:=Which[x<10,1,x<100,10,x<1000,100,x<10000,1000,True,10000]


(* ::Subsubsection::GrayLevel[0.5]::Closed:: *)
(*AdriaCLIM Domains*)


(*Temp=Table[Import[file],{file,FileNames["*Land.csv",LocalDIR<>"RiverBasins\\"]}];*)
SNAd={{45.,6.5},{44.5,6.75},{44.75,6.75},{45.,6.75},{45.25,6.75},{45.75,6.75},{44.25,7.},{44.5,7.},{44.75,7.},{45.,7.},{45.25,7.},{45.5,7.},{45.75,7.},{46.,7.},{44.25,7.25},{44.5,7.25},{44.75,7.25},{45.,7.25},{45.25,7.25},{45.5,7.25},{45.75,7.25},{46.,7.25},{44.,7.5},{44.25,7.5},{44.5,7.5},{44.75,7.5},{45.,7.5},{45.25,7.5},{45.5,7.5},{45.75,7.5},{46.,7.5},{44.,7.75},{44.25,7.75},{44.5,7.75},{44.75,7.75},{45.,7.75},{45.25,7.75},{45.5,7.75},{45.75,7.75},{46.,7.75},{44.,8.},{44.25,8.},{44.5,8.},{44.75,8.},{45.,8.},{45.25,8.},{45.5,8.},{45.75,8.},{46.,8.},{46.25,8.},{44.25,8.25},{44.5,8.25},{44.75,8.25},{45.,8.25},{45.25,8.25},{45.5,8.25},{45.75,8.25},{46.,8.25},{46.25,8.25},{46.5,8.25},{44.5,8.5},{44.75,8.5},{45.,8.5},{45.25,8.5},{45.5,8.5},{45.75,8.5},{46.,8.5},{46.25,8.5},{46.5,8.5},{44.5,8.75},{44.75,8.75},{45.,8.75},{45.25,8.75},{45.5,8.75},{45.75,8.75},{46.,8.75},{46.25,8.75},{46.5,8.75},{44.5,9.},{44.75,9.},{45.,9.},{45.25,9.},{45.5,9.},{45.75,9.},{46.,9.},{46.25,9.},{46.5,9.},{44.5,9.25},{44.75,9.25},{45.,9.25},{45.25,9.25},{45.5,9.25},{45.75,9.25},{46.,9.25},{46.25,9.25},{46.5,9.25},{44.5,9.5},{44.75,9.5},{45.,9.5},{45.25,9.5},{45.5,9.5},{45.75,9.5},{46.,9.5},{46.25,9.5},{46.5,9.5},{44.25,9.75},{44.5,9.75},{44.75,9.75},{45.,9.75},{45.25,9.75},{45.5,9.75},{45.75,9.75},{46.,9.75},{46.25,9.75},{46.5,9.75},{44.25,10.},{44.5,10.},{44.75,10.},{45.,10.},{45.25,10.},{45.5,10.},{45.75,10.},{46.,10.},{46.25,10.},{46.5,10.},{44.25,10.25},{44.5,10.25},{44.75,10.25},{45.,10.25},{45.25,10.25},{45.5,10.25},{45.75,10.25},{46.,10.25},{46.25,10.25},{46.5,10.25},{46.75,10.25},{44.,10.5},{44.25,10.5},{44.5,10.5},{44.75,10.5},{45.,10.5},{45.25,10.5},{45.5,10.5},{45.75,10.5},{46.,10.5},{46.25,10.5},{46.5,10.5},{46.75,10.5},{44.,10.75},{44.25,10.75},{44.5,10.75},{44.75,10.75},{45.,10.75},{45.25,10.75},{45.5,10.75},{45.75,10.75},{46.,10.75},{46.25,10.75},{46.5,10.75},{46.75,10.75},{47.,10.75},{44.,11.},{44.25,11.},{44.5,11.},{44.75,11.},{45.,11.},{45.25,11.},{45.5,11.},{45.75,11.},{46.,11.},{46.25,11.},{46.5,11.},{46.75,11.},{47.,11.},{44.,11.25},{44.25,11.25},{44.5,11.25},{44.75,11.25},{45.,11.25},{45.25,11.25},{45.5,11.25},{45.75,11.25},{46.,11.25},{46.25,11.25},{46.5,11.25},{46.75,11.25},{47.,11.25},{44.,11.5},{44.25,11.5},{44.5,11.5},{44.75,11.5},{45.,11.5},{45.25,11.5},{45.5,11.5},{45.75,11.5},{46.,11.5},{46.25,11.5},{46.5,11.5},{46.75,11.5},{47.,11.5},{43.75,11.75},{44.,11.75},{44.25,11.75},{44.5,11.75},{44.75,11.75},{45.,11.75},{45.25,11.75},{45.5,11.75},{45.75,11.75},{46.,11.75},{46.25,11.75},{46.5,11.75},{46.75,11.75},{47.,11.75},{43.75,12.},{44.,12.},{44.25,12.},{44.5,12.},{44.75,12.},{45.,12.},{45.25,12.},{45.5,12.},{45.75,12.},{46.,12.},{46.25,12.},{46.5,12.},{46.75,12.},{47.,12.},{43.75,12.25},{44.,12.25},{44.25,12.25},{44.5,12.25},{44.75,12.25},{45.,12.25},{45.25,12.25},{45.5,12.25},{45.75,12.25},{46.,12.25},{46.25,12.25},{46.5,12.25},{46.75,12.25},{47.,12.25},{43.75,12.5},{44.,12.5},{44.25,12.5},{44.75,12.5},{45.,12.5},{45.5,12.5},{45.75,12.5},{46.,12.5},{46.25,12.5},{46.5,12.5},{46.75,12.5},{43.75,12.75},{44.,12.75},{45.5,12.75},{45.75,12.75},{46.,12.75},{46.25,12.75},{46.5,12.75},{46.75,12.75},{45.5,13.},{45.75,13.},{46.,13.},{46.25,13.},{46.5,13.},{45.75,13.25},{46.,13.25},{46.25,13.25},{46.5,13.25},{45.,13.5},{45.25,13.5},{45.5,13.5},{45.75,13.5},{46.,13.5},{46.25,13.5},{46.5,13.5},{44.75,13.75},{45.,13.75},{45.25,13.75},{45.5,13.75},{45.75,13.75},{46.,13.75},{46.25,13.75},{46.5,13.75},{44.75,14.},{45.,14.},{45.25,14.},{45.5,14.},{45.75,14.},{46.,14.},{46.25,14.},{45.25,14.25},{45.5,14.25},{45.75,14.25},{45.5,14.5},{45.75,14.5}};
NAd={{43.5,12.25},{43.75,12.25},{43.5,12.5},{43.75,12.5},{43.,12.75},{43.25,12.75},{43.5,12.75},{43.75,12.75},{44.,12.75},{43.,13.},{43.25,13.},{43.5,13.},{43.75,13.},{44.,13.},{42.5,13.25},{42.75,13.25},{43.,13.25},{43.25,13.25},{43.5,13.25},{43.75,13.25},{42.5,13.5},{42.75,13.5},{43.,13.5},{43.25,13.5},{43.5,13.5},{43.75,13.5},{42.5,13.75},{42.75,13.75},{43.,13.75},{43.25,13.75},{43.5,13.75},{44.75,13.75},{42.75,14.},{43.,14.},{44.75,14.},{45.,14.},{45.25,14.},{45.5,14.},{43.,14.25},{43.25,14.25},{45.,14.25},{45.25,14.25},{45.5,14.25},{43.25,14.5},{43.5,14.5},{45.25,14.5},{45.5,14.5},{43.5,14.75},{45.,14.75},{45.25,14.75},{45.5,14.75},{43.75,15.},{44.25,15.},{44.5,15.},{44.75,15.},{45.,15.},{45.25,15.},{44.,15.25},{44.25,15.25},{44.5,15.25},{43.75,15.5},{44.,15.5},{44.25,15.5},{44.5,15.5},{43.75,15.75},{44.,15.75},{44.25,15.75},{44.,16.},{44.25,16.},{44.,16.25},{44.25,16.25}};
NAd=Complement[NAd,{{43.,14.25},{43.25,14.25},{43.25,14.5},{43.5,14.5},{43.5,14.75},{43.75,15.},{45.5,14.},{42.5,13.25},{42.5,13.5},{42.5,13.75},{44.25,16.25},{44.,16.25},{44.,16.},{44.,15.75},{43.75,15.75},{43.75,15.5},{44.,13.},{43.75,13.5},{43.5,13.75},{43.,14.},{44.75,13.75},{44.75,14.},{44.25,15.}}];
SNAd=Complement[SNAd,NAd];SNAd=Complement[SNAd,{{44.25,9.75},{44.25,10.},{44.,10.5},{44.,10.75},{44.,11.25},{43.75,11.75},{44.25,10.25},{44.,7.5},{44.,7.75},{44.,8.},{44.5,6.75},{44.75,6.75},{45.,6.5},{45.25,6.75},{46.,7.},{46.,7.25},{46.5,8.25},{46.5,9.5},{46.5,9.75},{46.5,10.},{46.75,10.25},{47.,10.75},{47.,11.},{46.75,12.75},{46.75,12.5},{46.5,13.75},{45.75,14.5},{45.,13.5},{44.75,13.75},{44.75,14.},{44.75,12.5},{45.5,13.},{44.25,12.5}}];
CAd={{42.5,13.},{42.25,13.25},{42.5,13.25},{42.25,13.5},{42.5,13.5},{41.75,13.75},{42.,13.75},{42.25,13.75},{42.5,13.75},{42.75,13.75},{41.75,14.},{42.,14.},{42.25,14.},{42.5,14.},{42.75,14.},{41.75,14.25},{42.,14.25},{42.25,14.25},{42.5,14.25},{41.5,14.5},{41.75,14.5},{42.,14.5},{42.25,14.5},{41.5,14.75},{41.75,14.75},{42.,14.75},{42.25,14.75},{41.25,15.},{41.5,15.},{41.75,15.},{42.,15.},{41.25,15.25},{41.5,15.25},{41.75,15.25},{42.,15.25},{41.75,15.5},{42.,15.5},{43.75,15.5},{44.,15.5},{41.75,15.75},{42.,15.75},{43.75,15.75},{44.,15.75},{41.75,16.},{42.,16.},{43.5,16.},{43.75,16.},{44.,16.},{44.25,16.},{42.,16.25},{43.5,16.25},{43.75,16.25},{44.,16.25},{44.25,16.25},{42.,16.5},{43.5,16.5},{43.75,16.5},{44.,16.5},{44.25,16.5},{43.5,16.75},{43.75,16.75},{44.,16.75},{44.25,16.75},{42.25,17.},{43.,17.},{43.25,17.},{43.5,17.},{43.75,17.},{44.,17.},{43.,17.25},{43.25,17.25},{43.5,17.25},{43.75,17.25},{44.,17.25},{42.5,17.5},{42.75,17.5},{43.,17.5},{43.25,17.5},{43.5,17.5},{43.75,17.5},{44.,17.5},{42.75,17.75},{43.,17.75},{43.25,17.75},{43.5,17.75},{43.75,17.75},{44.,17.75},{42.75,18.},{43.,18.},{43.25,18.},{43.5,18.},{43.75,18.},{44.,18.},{42.5,18.25},{42.75,18.25},{43.,18.25},{43.25,18.25},{43.5,18.25},{43.75,18.25},{42.5,18.5},{42.75,18.5},{43.,18.5},{43.25,18.5},{43.5,18.5},{42.75,18.75},{43.,18.75},{43.25,18.75}};
CAd=Complement[CAd,{{41.75,16.},{41.75,15.75},{41.75,15.5},{41.25,15.25},{41.5,15.25},{42.5,18.25},{42.5,18.5},{42.75,18.75},{42.5,13.},{42.,16.},{42.,16.25},{42.,16.5},{42.,15.75},{42.,15.5},{42.25,14.75},{44.,15.5},{44.25,16.},{44.25,16.75},{44.,17.5},{44.,17.75},{44.,18.},{43.25,18.75},{42.75,17.5},{42.25,17.},{42.5,17.5},{42.75,13.75},{42.75,14.}}];
SAd={{40.75,15.},{41.,15.},{41.25,15.},{41.5,15.},{40.75,15.25},{41.,15.25},{41.25,15.25},{41.5,15.25},{41.75,15.25},{40.75,15.5},{41.,15.5},{41.25,15.5},{41.5,15.5},{41.75,15.5},{40.75,15.75},{41.,15.75},{41.25,15.75},{41.5,15.75},{41.75,15.75},{40.75,16.},{41.,16.},{41.25,16.},{41.5,16.},{41.75,16.},{41.,16.25},{41.25,16.25},{41.75,16.25},{42.,16.25},{41.,16.5},{41.25,16.5},{40.75,16.75},{41.,16.75},{41.25,16.75},{40.75,17.},{41.,17.},{40.75,17.25},{41.,17.25},{40.5,17.5},{40.75,17.5},{40.25,17.75},{40.5,17.75},{40.75,17.75},{42.75,17.75},{40.,18.},{40.25,18.},{40.5,18.},{40.75,18.},{42.75,18.},{40.,18.25},{40.25,18.25},{40.5,18.25},{42.5,18.25},{42.75,18.25},{39.75,18.5},{40.,18.5},{40.25,18.5},{42.25,18.5},{42.5,18.5},{42.75,18.5},{39.75,18.75},{42.25,18.75},{42.5,18.75},{42.75,18.75},{43.,18.75},{39.75,19.},{42.,19.},{42.25,19.},{42.5,19.},{42.75,19.},{43.,19.},{39.75,19.25},{40.5,19.25},{40.75,19.25},{41.75,19.25},{42.,19.25},{42.25,19.25},{42.5,19.25},{42.75,19.25},{43.,19.25},{39.75,19.5},{40.25,19.5},{40.5,19.5},{40.75,19.5},{41.,19.5},{41.25,19.5},{41.5,19.5},{41.75,19.5},{42.,19.5},{42.25,19.5},{42.5,19.5},{42.75,19.5},{39.75,19.75},{40.,19.75},{40.25,19.75},{40.5,19.75},{40.75,19.75},{41.,19.75},{41.25,19.75},{41.5,19.75},{41.75,19.75},{42.,19.75},{42.25,19.75},{42.5,19.75},{39.75,20.},{40.,20.},{40.25,20.},{40.5,20.},{40.75,20.},{41.,20.},{41.25,20.},{41.5,20.},{41.75,20.},{42.,20.},{42.25,20.},{42.5,20.},{42.75,20.},{39.75,20.25},{40.,20.25},{40.25,20.25},{40.5,20.25},{40.75,20.25},{41.,20.25},{41.25,20.25},{41.5,20.25},{41.75,20.25},{42.,20.25},{42.25,20.25},{42.5,20.25},{42.75,20.25},{39.75,20.5},{40.,20.5},{40.25,20.5},{40.5,20.5},{40.75,20.5},{41.,20.5},{41.25,20.5},{41.5,20.5},{41.75,20.5},{42.,20.5},{42.25,20.5},{42.5,20.5},{42.75,20.5},{43.,20.5},{39.75,20.75},{40.,20.75},{40.25,20.75},{40.5,20.75},{40.75,20.75},{41.,20.75},{41.25,20.75},{41.5,20.75},{41.75,20.75},{42.,20.75},{42.25,20.75},{42.5,20.75},{42.75,20.75},{43.,20.75},{39.75,21.},{40.,21.},{40.25,21.},{40.5,21.},{40.75,21.},{41.,21.},{41.25,21.},{41.5,21.},{42.,21.},{42.25,21.},{42.5,21.},{39.75,21.25},{40.,21.25}};
SAd=Complement[SAd,{{41.75,15.25},{41.5,15.},{41.25,15.},{41.,15.},{40.75,15.},{40.75,15.25},{40.75,15.5},{40.75,16.},{42.,16.25},{41.75,16.25},{41.25,16.75},{40.75,18.},{40.5,18.25},{40.,18.},{40.25,17.75},{40.75,16.75},{40.5,17.5},{40.5,19.25},{40.75,19.25},{40.,19.75},{39.75,20.5},{39.75,20.75},{39.75,21.},{39.75,21.25},{40.,21.25},{41.5,21.},{42.,21.},{42.5,21.},{43.,20.75},{43.,20.5},{43.,19.25},{43.,19.},{43.,18.75},{42.75,18.5},{42.75,18.25},{42.75,18.},{42.75,17.75},{42.25,18.5},{42.25,18.75},{42.,19.},{41.75,19.25},{41.75,19.5},{40.,18.5},{40.25,18.5},{39.75,18.5},{39.75,18.75},{39.75,19.},{39.75,19.25},{39.75,19.5},{39.75,19.75},{39.75,20.}}];
PA3={{45.,6.5},{44.5,6.75},{44.75,6.75},{45.,6.75},{45.25,6.75},{45.75,6.75},{44.25,7.},{44.5,7.},{44.75,7.},{45.,7.},{45.25,7.},{45.5,7.},{45.75,7.},{46.,7.},{44.,7.25},{44.25,7.25},{44.5,7.25},{44.75,7.25},{45.,7.25},{45.25,7.25},{45.5,7.25},{45.75,7.25},{46.,7.25},{44.,7.5},{44.25,7.5},{44.5,7.5},{44.75,7.5},{45.,7.5},{45.25,7.5},{45.5,7.5},{45.75,7.5},{46.,7.5},{44.,7.75},{44.25,7.75},{44.5,7.75},{44.75,7.75},{45.,7.75},{45.25,7.75},{45.5,7.75},{45.75,7.75},{46.,7.75},{44.,8.},{44.25,8.},{44.5,8.},{44.75,8.},{45.,8.},{45.25,8.},{45.5,8.},{45.75,8.},{46.,8.},{46.25,8.},{44.25,8.25},{44.5,8.25},{44.75,8.25},{45.,8.25},{45.25,8.25},{45.5,8.25},{45.75,8.25},{46.,8.25},{46.25,8.25},{46.5,8.25},{44.5,8.5},{44.75,8.5},{45.,8.5},{45.25,8.5},{45.5,8.5},{45.75,8.5},{46.,8.5},{46.25,8.5},{46.5,8.5},{44.5,8.75},{44.75,8.75},{45.,8.75},{45.25,8.75},{45.5,8.75},{45.75,8.75},{46.,8.75},{46.25,8.75},{46.5,8.75},{44.5,9.},{44.75,9.},{45.,9.},{45.25,9.},{45.5,9.},{45.75,9.},{46.,9.},{46.25,9.},{46.5,9.},{46.75,9.},{44.5,9.25},{44.75,9.25},{45.,9.25},{45.25,9.25},{45.5,9.25},{45.75,9.25},{46.,9.25},{46.25,9.25},{46.5,9.25},{44.5,9.5},{44.75,9.5},{45.,9.5},{45.25,9.5},{45.5,9.5},{45.75,9.5},{46.,9.5},{46.25,9.5},{46.5,9.5},{44.25,9.75},{44.5,9.75},{44.75,9.75},{45.,9.75},{45.25,9.75},{45.5,9.75},{45.75,9.75},{46.,9.75},{46.25,9.75},{46.5,9.75},{44.25,10.},{44.5,10.},{44.75,10.},{45.,10.},{45.25,10.},{45.5,10.},{45.75,10.},{46.,10.},{46.25,10.},{46.5,10.},{44.25,10.25},{44.5,10.25},{44.75,10.25},{45.,10.25},{45.25,10.25},{45.5,10.25},{45.75,10.25},{46.,10.25},{46.25,10.25},{46.5,10.25},{44.,10.5},{44.25,10.5},{44.5,10.5},{44.75,10.5},{45.,10.5},{45.25,10.5},{45.5,10.5},{45.75,10.5},{46.,10.5},{46.25,10.5},{46.5,10.5},{44.,10.75},{44.25,10.75},{44.5,10.75},{44.75,10.75},{45.,10.75},{45.25,10.75},{45.5,10.75},{45.75,10.75},{46.,10.75},{46.25,10.75},{46.5,10.75},{44.,11.},{44.25,11.},{44.5,11.},{44.75,11.},{45.,11.},{45.25,11.},{45.5,11.},{45.75,11.},{46.,11.},{46.25,11.},{44.,11.25},{44.25,11.25},{44.5,11.25},{44.75,11.25},{45.,11.25},{45.25,11.25},{45.5,11.25},{44.,11.5},{44.25,11.5},{44.5,11.5},{44.75,11.5},{45.,11.5},{45.25,11.5},{43.75,11.75},{44.,11.75},{44.25,11.75},{44.5,11.75},{44.75,11.75},{45.,11.75},{43.75,12.},{44.,12.},{44.25,12.},{44.5,12.},{44.75,12.},{45.,12.},{45.25,12.},{43.75,12.25},{44.,12.25},{44.25,12.25},{44.5,12.25},{44.75,12.25},{45.,12.25},{43.75,12.5},{44.,12.5},{44.25,12.5},{44.75,12.5},{45.,12.5},{43.75,12.75},{44.,12.75}};
PA3=Complement[PA3,{{44.,12.75},{43.75,12.75},{43.75,12.5},{43.75,12.25},{46.5,10.},{46.5,9.75},{46.5,9.5},{46.75,9.},{46.5,8.25},{46.,7.25},{46.,7.},{45.25,6.75},{45.,6.5},{44.75,6.75},{44.5,6.75},{44.,7.25},{44.,7.5},{44.,7.75},{44.,8.},{44.25,9.75},{44.25,10.},{44.25,10.25},{44.,10.5},{44.,10.75},{44.,11.25},{43.75,11.75},{44.25,12.5},{44.75,12.5}}];
ADR=SortBy[Flatten[{SNAd,NAd,CAd,SAd},1],First];
iInset[Text_,LatLon_]:={Table[Inset[Style[Text,White],GeoPosition[LatLon+.05{Cos[x Pi],Sin[x Pi]}]],{x,0,2,.1}],Inset[Text,GeoPosition[LatLon]]}
If[DevMODE,Print[GeoGraphics[{AdBLUE2,PointSize->.012,Point@GeoPosition@PA3,GrayLevel[.5],PointSize->.0075,Point@GeoPosition@{SNAd,NAd,CAd,SAd},PointSize->.005,Table[{{AdGRAY,AdBLUE2,AdGREEN,AdYELLOW,AdPINK,AdBLUE}[[i]],{iInset[Style[#[[1]],Smaller],#[[2]]+.3{1,0}],iInset[Style[Length@{ADR,SNAd,NAd,CAd,SAd,PA3}[[i]],Larger],#[[2]]]}&[{{"ADR","SNAd","NAd","CAd","SAd","PA3"}[[i]],{{40.5,11.5},{46.5,15.5},{45.5,17.},{44.75,18.75},{43.75,20.5},{43.5,9.25}}[[i]]}],Polygon@GeoPosition[Temp[[{1,5,3,2,6,4}[[i]]]]],Point@GeoPosition[{ADR,SNAd,NAd,CAd,SAd,PA3}[[i]]]},{i,1,6}]},ImageSize->600,BaseStyle->{AdFONT,Bold,16,FontTracking->"Narrow"},GeoServer->"https://server.arcgisonline.com/ArcGIS/rest/services/World_Terrain_Base/MapServer/tile/`1`/`3`/`2`"]]];


RiverBasins={{"Adriatic Sea",ADR},{"Shallow Northern Adriatic Sea",SNAd},{"Northern Adriatic Sea",NAd},{"Central Adriatic Sea",CAd},{"Southern Adriatic Sea",SAd},{"[PA3] Emilia-Romagna",PA3}};


(* ::Subsubsection::GrayLevel[0.5]::Closed:: *)
(*Standardized Index Functions*)


SPILevel[spi_]:=Which[ToString@spi=="Null",Null,spi<=-2,"Extremely Dry",spi<=-1.5,"Severely Dry",spi<=-1,"Moderately Dry",spi<=0,"Near Normal \[DownArrow]",spi<1,"Near Normal \[UpArrow]",spi<1.5,"Moderately Wet",spi<2,"Severely Wet",spi>=2,"Extremely Wet"]

Mag[x_]:=Flatten@Table[Cases[Flatten@Table[If[xx==0,1,If[10^y<=Abs[xx]<10^(y+1),10^y]],{y,-30,30}],Except[Null]],{xx,Flatten[{x}]}]


SetONLY[x_]:=Table[If[Or[#[[1]],#[[2]]]&[Table[ToString[Head[i]]==j,{j,{"Real","Integer"}}]],i,Null],{i,x}]


GridPointsFUN[basin_,res_]:=Last@{
GridPoints=Table[RegionMember[Polygon@basin[[i]]],{i,1,3}];
GridPoints=Table[DeleteDuplicates@Cases[Flatten[Table[If[Map[GridPoints[[i]],{{lat,lon}}][[1]],{lat,lon}],
{lat,Round[Min@basin[[i,All,1]],res],Round[Max@basin[[i,All,1]],res],res},{lon,Round[Min@basin[[i,All,2]],res],Round[Max@basin[[i,All,2]],res],res}],1],Except[Null]],{i,1,3}]}


TimeScales={1,3,6,12,24,48};

SPILevel[spi_]:=Which[ToString@spi=="Null",Null,
spi<=-2,"Extremely Dry",spi<=-1.5,"Severely Dry",spi<=-1,"Moderately Dry",spi<=0,"Near Normal \[DownArrow]",
spi<1,"Near Normal \[UpArrow]",spi<1.5,"Moderately Wet",spi<2,"Severely Wet",spi>=2,"Extremely Wet"]


(* ::Chapter::RGBColor[0.3686274509803922, 0.6823529411764706, 1.]::Closed:: *)
(*Importing and Processing ERA5 data*)


(* ::Subsubsection::GrayLevel[0.5]::Closed:: *)
(*Importing Coordinates, Time, Temperature and Precipitation*)


SwitchPAR=True;
PrecERA5={};TempERA5={};TimeERA5={};
iPrint[StringJoin@{"\n\n",#,Table["=",(60-StringLength[#])],"\n"}&[ToUpperCase@"= Reading Temperature and Precipitation data "]];
Table[{If[StringTake[file,{-5,-4}]=="01",iPrint["> Opening files ............ "<>StringTake[file,{-10,-7}]]];

(* Import GeoCoordinates - Only for the first file *)
If[SwitchPAR,{LON=Import[file,{"Datasets",1}],LAT=Import[file,{"Datasets",2}],
DomainERA5=Table[{lat,lon},{lat,LAT},{lon,LON}],SwitchPAR=False}];

(* Import and Scale - Time *)
Time=Import[file,{"Datasets","time"}];
Time=Table[DatePlus[{1900,1,1,0},{t,"Hours"}],{t,Time}];

(* Import and Scale - Precipitation *)
Prec=Position[Import[file],"tp"][[1,1]];
Prec=Flatten@#[[{Position[#,"scale_factor"][[1,1]],Position[#,"add_offset"][[1,1]]},2]]&[Import[file,{"Annotations",Prec}]];
Prec=1000*(Prec[[1]]Import[file,{"Datasets","tp"}]+Prec[[2]]);

(* Import and Scale - Temperature *)
Temp=Position[Import[file],"t2m"][[1,1]];
Temp=Flatten@#[[{Position[#,"scale_factor"][[1,1]],Position[#,"add_offset"][[1,1]]},2]]&[Import[file,{"Annotations",Temp}]];
Temp=-273.15+(Temp[[1]]Import[file,{"Datasets","t2m"}]+Temp[[2]]);

(* Time resolution reduction - Hourly > Daily *)
Time=DeleteDuplicates[Time[[All,1;;3]]];
Temp=Table[{Min@#,Mean@#,Max@#}&[Temp[[hour;;(hour+23),lat,lon]]],{hour,1,Length@Temp,24},{lat,1,Dimensions[Temp][[2]]},{lon,1,Dimensions[Temp][[3]]}];
Prec=Table[Total[#[[hour;;(hour+23)]]],{hour,1,Length@#,24}]&[Prec];

(* Adding to dataset *)
AppendTo[TimeERA5,Time],AppendTo[PrecERA5,Prec],AppendTo[TempERA5,Temp]

},{file,Cases[FileNames["ERA5//ERA5_SFC*.nc",LocalDIR],_?(Between[ToExpression[StringTake[#,{-10,-7}]],AnalisysPERIOD]&)]}];
iPrint["> FILES READING PROCESS FINISHED"];

iPrint["\n> MERGE PARAMETERS ......... DONE"];
TimeERA5=Flatten[TimeERA5,1];PrecERA5=Flatten[Round[PrecERA5,.01],1];TempERA5=Flatten[Round[TempERA5,.01],1];
fERA5[day_]:=Join[Table[TimeERA5[[day]],Dimensions[PrecERA5][[2]],Dimensions[PrecERA5][[3]]],Transpose[Flatten[Transpose[Partition[PrecERA5[[day]],{1,1}],{3,4,1,2}],1],{3,1,2}],TempERA5[[day]],3]
ERA5=Table[fERA5[day],{day,1,Length@TimeERA5}];
(*ERA5=Table[Flatten@{TimeERA5[[day]],PrecERA5[[day,lat,lon]],TempERA5[[day,lat,lon]]},{day,1,Length@TimeERA5},{lat,1,Dimensions[PrecERA5][[2]]},{lon,1,Dimensions[PrecERA5][[3]]}];*)

iPrint[StringJoin@Flatten@{"  Domain ................... ",ToString[#[[2]]]," \[Cross] ",ToString[#[[3]]]}]&[Dimensions[ERA5]];
iPrint[StringJoin@Flatten@{"  Start .................... ",DateString[ERA5[[1,1,1,1;;3]],{"Day","/","Month","/","Year"}]}];
iPrint[StringJoin@Flatten@{"  End ...................... ",DateString[ERA5[[-1,1,1,1;;3]],{"Day","/","Month","/","Year"}]}];
iPrint[StringJoin@Flatten@{"  Years .................... ",ToString@Length@DeleteDuplicates@ERA5[[All,1,1,1]]}];
iPrint[StringJoin@Flatten@{"  Months ................... ",ToString@Length@DeleteDuplicates@ERA5[[All,1,1,1;;2]]}];
iPrint[StringJoin@Flatten@{"  Days ..................... ",ToString@Length@ERA5}];
Clear[Time,TimeERA5,Prec,PrecERA5,Temp,TempERA5]


(* ::Subsubsection::GrayLevel[0.5]::Closed:: *)
(*Discretizing Domains*)


(* ERA5 GRID *)
gERA5=Table[{lat,lon},{lat,LAT},{lon,LON}];


iPrint[StringJoin@{"\n\n",#,Table["=",(60-StringLength[#])],"\n"}&[ToUpperCase@"= Discretizing Domains "]];
(* Map ERA5 gridpoints by Basins *)
Table[{AppendTo[RiverBasins[[i]],Flatten[Position[gERA5,#]&/@RiverBasins[[i,2]],1]],
iPrint[StringJoin@{"> ",#[[1]]," ",Table[".",(38-StringLength[#[[1]]])],StringPadLeft[ToString@Length@#[[2]],4]," gridpoints"}&[RiverBasins[[i]]]]
},{i,1,Length@RiverBasins}];


Table[AppendTo[RiverBasins[[i]],{{43.379112,14.840040},{44.912257,12.987451},{44.060441,14.244517},{42.782794,15.802863},{41.332801,18.137200},{44.549283,12.689859}}[[i]]],{i,1 Length@RiverBasins}];


(* ::Subsubsection::GrayLevel[0.5]::Closed:: *)
(*Computation of Evapotranspiration*)


(* ::Text:: *)
(*Hargreaves and Samani (1985)*)
(*Reference crop evapotranspiration from temperature. Applied engineering in agriculture, 1(2), pp.96-99.*)
(*http://doi.org/10.13031/2013.26773*)
(**)
(*ETo = 0.0023 Ra (TC + 17.8) TR^0.5*)
(**)
(*TC = average temperature in degrees \[Degree]C, or (Tmax + Tmin)/2 *)
(*TR = mean maximum minus mean minimum temperature in 0C for the period evaluated*)
(**)
(*Ra = 916.732 x (OM x SIN(LAT) x SIN(DEC) + COS(LAT) x COS(DEC) x SIN(OM))/ES x 10/(596 - 0.55 TC) *)
(**)
(*RA = extraterrestrial radiation for a given Month <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<*)
(*TC     =    Average monthly temperature in degrees celsius. *)
(*LAT* =   Latitude of the station in radians. *)
(*DEC   =  - 0.00117 - 0.40117 x COS(Pi x J/6) - 0.042185 x SIN(Pi x J/6) + 0.00163 x COS(Pi x J/3)*)
(*               + 0.00208 x SIN(Pi x J/3) *)
(*J        =   Number of months, e.g., January = 1. *)
(*ES     =   1.00016 - 0.032126 x COS(Pi x J/6) - 0.003354 x SIN(Pi x J/6) *)
(*OM   =    Arc.COS(-TAN(LAT) x TAN(DEC))*)
(** Latitude should be a positive value for northern hemisphere and negative for southern hemisphere. *)
(**)
(*RA = extraterrestrial radiation for a given day <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<*)
(*TC     =   Average daily temperature*)
(*LAT* =  Latitude of the station in radians*)
(*DEC   =  0.40876 x COS(0.0172142 x (J + 192))*)
(*J        =  Number of julian days, e.g. February 1st = 1.*)
(*ES     =  1.00028 + 0.03269 x COS(0.0172142 x (J + 192))*)
(*OM   =  Arc. COS(-TAN(LAT) x TAN(DEC)) *)
(** Latitude should be a positive value for northern hemisphere and negative for southern hemisphere. *)


iPrint[StringJoin@{"\n\n",#,Table["=",(60-StringLength[#])]}&[ToUpperCase@"= Computation of Evapotranspiration "]];


(* Compute the Evapotranspiration parameter TR *)
iPrint[ToUpperCase@"\n> Parameters:"];
TR=Mean@ERA5[[All,All,All,7]]-Mean@ERA5[[All,All,All,5]];
iPrint["> Temperature Range ........ Done"];


(*EquationsforDailyEvapotranspiration*)
ES[iday_]:= 1.00028 + 0.03269 Cos[0.0172142((DateDifference[{ERA5[[iday,1,1,1]],1,1},ERA5[[iday,1,1,1;;3]],"Days"][[1]]+1)+192)]
DEC[iday_]:= 0.40876 Cos[0.0172142((DateDifference[{ERA5[[iday,1,1,1]],1,1},ERA5[[iday,1,1,1;;3]],"Days"][[1]]+1)+192)]
OM[iday_,ilat_,ilon_]:=ArcCos[-Tan[gERA5[[ilat,ilon,1]]Pi/180]Tan[DEC[iday]]]

Ra[iday_,ilat_,ilon_]:=916.732((OM[iday,ilat,ilon]Sin[gERA5[[ilat,ilon,1]]Pi/180]Sin[DEC[iday]]+Cos[gERA5[[ilat,ilon,1]]Pi/180]Cos[DEC[iday]]Sin[OM[iday,ilat,ilon]])/ES[iday])(10/(596-0.55 ERA5[[iday,ilat,ilon,6]]))

ETo[iday_,ilat_,ilon_]:=0.0023 Ra[iday,ilat,ilon] (ERA5[[iday,ilat,ilon,6]]+17.8)Sqrt@TR[[ilat,ilon]]

iPrint["> Astronomic ............... Done"];


iPrint[ToUpperCase@"\n> Daily Evapotranspiration:"];
ET={};
Table[{If[ERA5[[day,1,1,{2,3}]]=={1,1},iPrint["> Processing ............... "<>ToString[ERA5[[day,1,1,1]]]],""],
AppendTo[ET,ETo[day,1;;#[[2]],1;;#[[3]]]]},{day,1,Length@ERA5}]&[Dimensions@ERA5];


Table[AppendTo[ERA5[[day,lat,lon]],ET[[day,lat,lon]]],{day,1,#[[1]]},{lat,1,#[[2]]},{lon,1,#[[3]]}]&[Dimensions@ERA5];
iPrint["\n> DATA MERGE ............... Done"];
Clear[ET];


(* ::Subsubsection::GrayLevel[0.5]::Closed:: *)
(*River Basin Aggregation*)


iPrint[StringJoin@{"\n\n",#,Table["=",(60-StringLength[#])],"\n"}&[ToUpperCase@"= River Basin Aggregation "]];

fERA5[iDay_,iLatLon_]:=ERA5[[iDay,iLatLon[[1]],iLatLon[[2]]]]

DaysWP=Table[{0},Length@RiverBasins];

Temp=Partition[Flatten@Transpose[Table[First@{Table[{
AppendTo[DaysWP[[basin]],If[(Length@Cases[#[[All,1]],_?(#<=1&)]>.7Length@RiverBasins[[basin,3]]),Last@DaysWP[[basin]]+1,0]];
Total[#[[All,1]]],Total[#[[All,2]]],Total[#[[All,1]]]-Total[#[[All,2]]]
}&[fERA5[day,#][[{4,8}]]&/@RiverBasins[[basin,3]]],{day,1,Length@ERA5}],
iPrint[StringJoin@{"> ",#," ",Table[".",(38-StringLength[#])]," Done"}&[RiverBasins[[basin,1]]]]
},{basin,1,Length@RiverBasins}]],3Length@RiverBasins];

ERA5=Transpose@Flatten[{Transpose@ERA5[[All,1,1,1;;3]],Transpose@Temp},1];
DaysWP=Transpose@DaysWP[[All,2;;-1]];
Clear[Temp]


Export[OutputDIR<>"ProcERA5.csv",Transpose[Flatten[{Transpose@ERA5,Transpose@DaysWP},1]][[All,Flatten@{1,2,3,Table[{i+{0,1,2},1+Length@ERA5[[1]]+Abs[(4-i)/3]},{i,4,Length@ERA5[[1]],3}]}]]];


(* ::Chapter::RGBColor[0.3686274509803922, 0.6823529411764706, 1.]::Closed:: *)
(*Computing the Climate Indicators*)


iPrint[StringJoin@{"\n\n",#,Table["=",(60-StringLength[#])],"\n"}&[ToUpperCase@"= Computing the Climate Indicators "]];


(* ::Subsubsection::GrayLevel[0.5]::Closed:: *)
(*[MH-1] Standardized Precipitation Index (SPI)*)


(* ::Text:: *)
(*The Standardized Precipitation Index (SPI) is calculated in the following sequence. A monthly precipitation data set is prepared for a period of m months, ideally a continuous period of at least 30 years. A set of averaging periods are selected to determine a set of time scales of period j months where j is 3, 6, 12, 24, or 48 months. These represent arbitrary but typical time scales for precipitation deficits to affect the five types of usable water sources. The data set is moving in the sense that each month a new value is determined from the previous i months. Each of the data sets are fitted to the Gamma function to define the relationship of probability to precipitation. Once the relationship of probability to precipitation is established from the historic records, the probability of any observed precipitation data point is calculated and used along with an estimate of the inverse normal to calculate the precipitation deviation for a normally distributed probability density with a mean of zero and standard deviation of unity.This value is the SPI for the particular precipitation data point.*)
(*McKee et al. (1993) - The relationship of drought frequency and duration to time scales*)


iPrint[StringJoin@{"\n",#,Table["=",(60-StringLength[#])]}&["[MH-1] Standardized Precipitation Index (SPI) "]];

RunSPI[basin_]:={

SPI={#[[1,1]],#[[1,2]],Total@#[[All,3]]}&/@GatherBy[ERA5[[All,{1,2,(3 basin)+1}]],#[[1;;2]]&];
SPI=Table[Flatten@{SPI[[t,1;;2]],Table[If[t<p,Null,Total[SPI[[(t-(p-1));;t,3]]]],{p,TimeScales}]},{t,1,Length@SPI}];

fSPI=Table[{},Length@TimeScales];

Table[{
(* Step 3-4 *)
RefPi=(1.Partition[SPI[[All,2+iTS]],12]/. {0.->Null,0->Null,1.` Null->Null});

(* Step 5 *)
LnRefPi=(Re@Log[RefPi]/. Re@Log[Null]->Null);

(* Step 6-8 *)
GammaPAR=Transpose@Table[{Mean@Cases[RefPi[[All,m]],Except[Null]],Total@Cases[LnRefPi[[All,m]],Except[Null]],Length@Cases[LnRefPi[[All,m]],Except[Null]]},{m,1,12}];
AppendTo[GammaPAR,Table[Log[GammaPAR[[1,m]]]-GammaPAR[[2,m]]/GammaPAR[[3,m]],{m,1,12}]];
AppendTo[GammaPAR,Table[\!\(TraditionalForm\`\((1/\((4  GammaPAR[\([4, m]\)])\))\) \((1 + \[Sqrt]\((1 + \((4/3)\) GammaPAR[\([4, m]\)])\))\)\),{m,1,12}]];
AppendTo[GammaPAR,Table[\!\(TraditionalForm\`GammaPAR[\([1, m]\)]/GammaPAR[\([5, m]\)]\),{m,1,12}]];
(* Step 9 *)
GammaPOS=Table[If[ToString@RefPi[[y,m]]=="Null",0,CDF[GammaDistribution[GammaPAR[[5,m]],GammaPAR[[6,m]]],RefPi[[y,m]]]],{y,1,Length@RefPi},{m,1,12}];

AdTimeScales=Table[Which[Length@ts<=12,{{1,ts}},
Length@ts<=24,{{1,ts[[1;;12]]},{2,-12+ts[[13;;-1]]}},
Length@ts<=36,{{1,ts[[1;;12]]},{2,-12+ts[[13;;24]]},{3,-24+ts[[25;;-1]]}},
Length@ts<=48,{{1,ts[[1;;12]]},{2,-12+ts[[13;;24]]},{3,-24+ts[[25;;36]]},{4,-36+ts[[37;;-1]]}}],{ts,Table[Range[ts-1],{ts,TimeScales}]}];
Table[GammaPOS[[ts[[1]],ts[[2]]]]=Table[Null,Length@ts[[2]]],{ts,AdTimeScales[[iTS]]}];

(* Step 10 *)
AppendTo[GammaPAR,Table[1.(Length@Cases[GammaPOS[[All,m]],Except[Null]]-GammaPAR[[3,m]])/Length@Cases[GammaPOS[[All,m]],Except[Null]],{m,1,12}]];

(* Step 11 *)
GammaPOS=Table[If[ToString@GammaPOS[[y,m]]=="Null",Null,GammaPAR[[7,m]]+(GammaPOS[[y,m]](1-GammaPAR[[7,m]]))],{y,1,Length@GammaPOS},{m,1,12}];

(* Step 12 *)
fSPI[[iTS]]=Table[If[ToString@GammaPOS[[y,m]]=="Null",Null,InverseCDF[NormalDistribution[0,1],GammaPOS[[y,m]]]],{y,1,Length@GammaPOS},{m,1,12}];

},{iTS,1,Length@TimeScales}];

fSPI=Table[Flatten[iTS],{iTS,fSPI}];
SPI=Table[SetONLY@Flatten@{SPI[[m,1;;2]],Riffle[SPI[[m,3;;-1]],fSPI[[All,m]]]},{m,1,Length@SPI}];
};


iPrint["[MH-1]\n[MH-1] Processing by River-Basin"];
MH1=Table[Last@{RunSPI[basin],iPrint["[MH-1]                           > "<>RiverBasins[[basin,1]]],
Table[SPI[[All,{1,2,ts}]],{ts,4,2+2Length@TimeScales,2}]},{basin,1,Length@RiverBasins}];

iPrint["[MH-1]\n[MH-1] Converting................. AdriaCLIM format"];
MH1=Table[Transpose@Flatten[{Transpose@MH1[[1,ts,All,{1,2}]],Round[Table[MH1[[basin,ts,All,-1]],{basin,1,Length@RiverBasins}],.01]/.Round[Null, 0.01]->Null},1],{ts,1,Length@TimeScales}];


tFILE=OutputDIR<>"adriaclim_ERA5_indicator_MH1_timeseries_hist_monthly_adriatic_"<>ToString[MH1[[1,1,1]]]<>"-"<>ToString[MH1[[1,-1,1]]]<>".csv";
If[FileExistsQ[tFILE],DeleteFile[tFILE]];
Export[tFILE,Prepend[SortBy[Cases[Flatten[Table[Flatten@{ToString[#[[1]]]<>"-"<>StringPadLeft[ToString[#[[2]]],2,"0"]<>"-01",
     Table[ToString@NumberForm[i,{12,6}],{i,RiverBasins[[st,4]]}],ToString[NumberForm[#[[3]],{6,2}]]
     }&/@MH1[[4,All,{1,2,st+2}]],{st,1,Length@RiverBasins}],1],_?(#[[4]]!="Null"&)],StringTake[#[[1]],7]&],
     {"Date","Lat","Lon","MH1"}],
      "CSV","TextDelimiters"->""];
iPrint["[MH-1] Successfully exported to... "<>FileNameTake@tFILE];


Export[StringReplace[tFILE,".csv"->".txt"],StringJoin@Flatten@{{StringPadRight[#[[1]],24," "],#[[2]],"\n"}&/@
{{"adriaclim_dataset:","indicator"},{"adriaclim_model:","ERA5"},{"adriaclim_scale:","adriatic"},{"adriaclim_timeperiod:","monthly"},{"adriaclim_type:","timeseries"},
{"institution:","Universit\[AGrave] di Bologna (Unibo)"},{"contact:","leonardo.aragao@unibo.it"},{"title:","MH-1 Standardized Precipitation Index (SPI)"},{"units:","adimensional"},
{"description:","SPI is a drought index based only on the probability of precipitation for a particular time scale (MH1 uses 12 months), see McKee et al. (1993). Adriatic Sea sections and the Pilot Area of Emilia-Romagna (PA3) aggregate the total precipitation over the respective catchment area."},
{"scale1:","-2.0 Extremely Dry"},{"scale1_rgbcolor:","{165,37,83}"},{"scale2:","-1.5 Severely Dry"},{"scale2_rgbcolor:","{250,112,161}"},{"scale3:","-1.0 Moderately Dry"},{"scale3_rgbcolor:","{254,215,229}"},
{"scale4:"," 0.0 Near Normal"},{"scale4_rgbcolor:","{255,255,255}"},
{"scale5:","+1.0 Moderately Wet"},{"scale5_rgbcolor:","{196,236,249}"},{"scale6:","+1.5 Severely Wet"},{"scale6_rgbcolor:","{142,218,245}"},{"scale7:","+2.0 Extremely Wet"},{"scale7_rgbcolor:","{71,138,161}"},
{"polygon1_centroid:","43.379112,14.840040"},{"polygon1:","adriaclim_indicator_RD_MH_polygon1.csv"},
{"polygon2_centroid:","44.912257,12.987451"},{"polygon2:","adriaclim_indicator_RD_MH_polygon2.csv"},
{"polygon3_centroid:","44.060441,14.244517"},{"polygon3:","adriaclim_indicator_RD_MH_polygon3.csv"},
{"polygon4_centroid:","42.782794,15.802863"},{"polygon4:","adriaclim_indicator_RD_MH_polygon4.csv"},
{"polygon5_centroid:","41.332801,18.137200"},{"polygon5:","adriaclim_indicator_RD_MH_polygon5.csv"},
{"polygon6_centroid:","44.549283,12.689859"},{"polygon6:","adriaclim_indicator_RD_MH_polygon6.csv"}}}];
iPrint["[MH-1]         with metadata in... "<>FileNameTake@StringReplace[tFILE,".csv"->".txt"]];


(* ::Subsubsection::GrayLevel[0.5]::Closed:: *)
(*[MH-2] Standardized Precipitation and Evapotranspiration Index (SPEI)*)


(* ::Text:: *)
(*The Standardized Precipitation Index (SPEI) is calculated as SPI, but replacing the monthly precipitation by the monthly precipitation minus the monthly evapotranspiration.*)


iPrint[StringJoin@{"\n",#,Table["=",(60-StringLength[#])]}&["[MH-2] Standardized Precipitation Index (SPEI) "]];

RunSPEI[basin_]:=Quiet@{

SPEI={#[[1,1]],#[[1,2]],Total@#[[All,3]]}&/@GatherBy[ERA5[[All,{1,2,(3 basin)+3}]],#[[1;;2]]&];
SPEI=Table[Flatten@{SPEI[[t,1;;2]],Table[If[t<p,Null,Total[SPEI[[(t-(p-1));;t,3]]]],{p,TimeScales}]},{t,1,Length@SPEI}];

fSPEI=Table[{},Length@TimeScales];

Table[{
(* Step 3-4 *)
RefPi=(1.Partition[SPEI[[All,2+iTS]],12]/. {0.->Null,0->Null,1.` Null->Null});

(* Step 5 *)
LnRefPi=(Re@Log[RefPi]/. Re@Log[Null]->Null);

(* Step 6-8 *)
GammaPAR=Transpose@Table[{Mean@Cases[RefPi[[All,m]],Except[Null]],Total@Cases[LnRefPi[[All,m]],Except[Null]],Length@Cases[LnRefPi[[All,m]],Except[Null]]},{m,1,12}];
AppendTo[GammaPAR,Table[Log[GammaPAR[[1,m]]]-GammaPAR[[2,m]]/GammaPAR[[3,m]],{m,1,12}]];
AppendTo[GammaPAR,Table[\!\(TraditionalForm\`\((1/\((4  GammaPAR[\([4, m]\)])\))\) \((1 + \[Sqrt]\((1 + \((4/3)\) GammaPAR[\([4, m]\)])\))\)\),{m,1,12}]];
AppendTo[GammaPAR,Table[\!\(TraditionalForm\`GammaPAR[\([1, m]\)]/GammaPAR[\([5, m]\)]\),{m,1,12}]];
(* Step 9 *)
GammaPOS=Table[If[ToString@RefPi[[y,m]]=="Null",0,CDF[GammaDistribution[GammaPAR[[5,m]],GammaPAR[[6,m]]],RefPi[[y,m]]]],{y,1,Length@RefPi},{m,1,12}];

AdTimeScales=Table[Which[Length@ts<=12,{{1,ts}},
Length@ts<=24,{{1,ts[[1;;12]]},{2,-12+ts[[13;;-1]]}},
Length@ts<=36,{{1,ts[[1;;12]]},{2,-12+ts[[13;;24]]},{3,-24+ts[[25;;-1]]}},
Length@ts<=48,{{1,ts[[1;;12]]},{2,-12+ts[[13;;24]]},{3,-24+ts[[25;;36]]},{4,-36+ts[[37;;-1]]}}],{ts,Table[Range[ts-1],{ts,TimeScales}]}];
Table[GammaPOS[[ts[[1]],ts[[2]]]]=Table[Null,Length@ts[[2]]],{ts,AdTimeScales[[iTS]]}];

(* Step 10 *)
AppendTo[GammaPAR,Table[1.(Length@Cases[GammaPOS[[All,m]],Except[Null]]-GammaPAR[[3,m]])/Length@Cases[GammaPOS[[All,m]],Except[Null]],{m,1,12}]];

(* Step 11 *)
GammaPOS=Table[If[ToString@GammaPOS[[y,m]]=="Null",Null,GammaPAR[[7,m]]+(GammaPOS[[y,m]](1-GammaPAR[[7,m]]))],{y,1,Length@GammaPOS},{m,1,12}];

(* Step 12 *)
fSPEI[[iTS]]=Table[If[ToString@GammaPOS[[y,m]]=="Null",Null,InverseCDF[NormalDistribution[0,1],GammaPOS[[y,m]]]],{y,1,Length@GammaPOS},{m,1,12}];

},{iTS,1,Length@TimeScales}];

fSPEI=Table[Flatten[iTS],{iTS,fSPEI}];
SPEI=Table[SetONLY@Flatten@{SPEI[[m,1;;2]],Riffle[SPEI[[m,3;;-1]],fSPEI[[All,m]]]},{m,1,Length@SPEI}];
};


(* Parameters SPEI by TimeScale > ParSPEI[iBasin,iTS,{SPEI Density, Averaged Normal Offset between accumulated Prec-ET and SPEI, Min SPEI, Max SPEI}] *)
ParSPEI=Table[Flatten@{RunSPEI[basin];
Length@Cases[SPEI,_?(NumericQ[#[[2+2iTS]]] &)]/(Length@SPEI-TimeScales[[iTS]]+1.),
Mean[(#[[2,2]]-#[[1,2]])&/@Cases[GatherBy[Flatten[{
{#[[1;;2]],Rescale[#[[1+2iTS]],MinMax[Cases[SPEI[[All,1+2iTS]],_Real]]]}&/@Cases[SPEI,_?(NumericQ[#[[1+2iTS]]] &)],
{#[[1;;2]],Rescale[#[[2+2iTS]],MinMax[Cases[SPEI[[All,2+2iTS]],_Real]]]}&/@Cases[SPEI,_?(NumericQ[#[[2+2iTS]]] &)]},1],First],_?(Length@#==2&)]],
MinMax[Cases[SPEI[[All,2+2iTS]],_Real]]
},{basin,1,Length@RiverBasins},{iTS,1,Length@TimeScales}];


iPrint["[MH-2]\n[MH-2] Processing by River-Basin"];
MH2=Table[Last@{RunSPEI[basin],iPrint["[MH-2]                           > "<>RiverBasins[[basin,1]]],
Table[Flatten@#&/@Last@{Temp={#[[1;;2]],Rescale[ParSPEI[[basin,iTS,2]]+Rescale[#[[1+2iTS]],MinMax[Cases[SPEI[[All,1+2iTS]],_Real]]],{0,1},ParSPEI[[basin,iTS,3;;4]]]}&/@Cases[SPEI,_?(NumericQ[#[[1+2iTS]]] &)];
SortBy[GatherBy[Flatten[{{#[[1;;2]],#[[2+2iTS]]}&/@Cases[SPEI,_?(NumericQ[#[[2+2iTS]]] &)],Temp},1],First],First][[All,1]]},{iTS,1,Length@TimeScales}]},{basin,1,Length@RiverBasins}];

iPrint["[MH-2]\n[MH-2] Converting ................ AdriaCLIM format"];
MH2=Table[Transpose@Flatten[{Transpose@MH2[[1,ts,All,{1,2}]],Round[Table[MH2[[basin,ts,All,-1]],{basin,1,Length@RiverBasins}],.01]/.Round[Null, 0.01]->Null},1],{ts,1,Length@TimeScales}];
Table[MH2[[iTS]]=Flatten[{Table[Flatten@{MH2[[1,t,1;;2]],Table[Null,Length@RiverBasins]},{t,1,TimeScales[[iTS]]-1}],MH2[[iTS]]},1],{iTS,2,Length@TimeScales}];


tFILE=OutputDIR<>"adriaclim_ERA5_indicator_MH2_timeseries_hist_monthly_adriatic_"<>ToString[MH2[[1,1,1]]]<>"-"<>ToString[MH2[[1,-1,1]]]<>".csv";
If[FileExistsQ[tFILE],DeleteFile[tFILE]];
Export[tFILE,Prepend[SortBy[Cases[Flatten[Table[Flatten@{ToString[#[[1]]]<>"-"<>StringPadLeft[ToString[#[[2]]],2,"0"]<>"-01",
     Table[ToString@NumberForm[i,{12,6}],{i,RiverBasins[[st,4]]}],ToString[NumberForm[#[[3]],{6,2}]]
     }&/@MH2[[4,All,{1,2,st+2}]],{st,1,Length@RiverBasins}],1],_?(#[[4]]!="Null"&)],StringTake[#[[1]],7]&],
     {"Date","Lat","Lon","MH2"}],
      "CSV","TextDelimiters"->""];
iPrint["[MH-2] Successfully exported to... "<>FileNameTake@tFILE];


Export[StringReplace[tFILE,".csv"->".txt"],StringJoin@Flatten@{{StringPadRight[#[[1]],24," "],#[[2]],"\n"}&/@
{{"adriaclim_dataset:","indicator"},{"adriaclim_model:","ERA5"},{"adriaclim_scale:","adriatic"},{"adriaclim_timeperiod:","monthly"},{"adriaclim_type:","timeseries"},
{"institution:","Universit\[AGrave] di Bologna (Unibo)"},{"contact:","leonardo.aragao@unibo.it"},{"title:","MH-2 Standardized Precipitation and Evapotraspiration Index (SPEI)"},{"units:","adimensional"},
{"description:","SPEI is an extension of the SPI which takes into account the balance of precipitation and potential evapotranspiration (PET). As MH1, MH2 uses a timescale of 12 months. The PET must be calculated using the Hargreaves equation (Hargreaves & Samani, 1985) which is based only on daily average, minimum and maximum air temperature and other extraterrestrial parameters. Adriatic Sea sections and the Pilot Area of Emilia-Romagna (PA3) aggregate the total precipitation and PET over the respective catchment area."},
{"scale1:","-2.0 Extremely Dry"},{"scale1_rgbcolor:","{165,37,83}"},{"scale2:","-1.5 Severely Dry"},{"scale2_rgbcolor:","{250,112,161}"},{"scale3:","-1.0 Moderately Dry"},{"scale3_rgbcolor:","{254,215,229}"},
{"scale4:"," 0.0 Near Normal"},{"scale4_rgbcolor:","{255,255,255}"},
{"scale5:","+1.0 Moderately Wet"},{"scale5_rgbcolor:","{196,236,249}"},{"scale6:","+1.5 Severely Wet"},{"scale6_rgbcolor:","{142,218,245}"},{"scale7:","+2.0 Extremely Wet"},{"scale7_rgbcolor:","{71,138,161}"},
{"polygon1_centroid:","43.379112,14.840040"},{"polygon1:","adriaclim_indicator_RD_MH_polygon1.csv"},
{"polygon2_centroid:","44.912257,12.987451"},{"polygon2:","adriaclim_indicator_RD_MH_polygon2.csv"},
{"polygon3_centroid:","44.060441,14.244517"},{"polygon3:","adriaclim_indicator_RD_MH_polygon3.csv"},
{"polygon4_centroid:","42.782794,15.802863"},{"polygon4:","adriaclim_indicator_RD_MH_polygon4.csv"},
{"polygon5_centroid:","41.332801,18.137200"},{"polygon5:","adriaclim_indicator_RD_MH_polygon5.csv"},
{"polygon6_centroid:","44.549283,12.689859"},{"polygon6:","adriaclim_indicator_RD_MH_polygon6.csv"}}}];
iPrint["[MH-2]         with metadata in... "<>FileNameTake@StringReplace[tFILE,".csv"->".txt"]];


(* ::Subsubsection::GrayLevel[0.5]::Closed:: *)
(*[MH-3] Number of Consecutive Days without Precipitation*)


(* ::Text:: *)
(*A day is considered without precipitation when at least 70% of its territory records less than 1 mm/day.*)


iPrint[StringJoin@{"\n",#,Table["=",(60-StringLength[#])],"\n[MH-3]"}&["[MH-3] Number of Consecutive Days without Precipitation "]];


iPrint["[MH-3] Processing by River-Basin"];
MH3=Transpose@Flatten[{Transpose@ERA5[[All,1;;3]],Transpose@DaysWP},1];
Table[iPrint["[MH-3]                           > "<>RiverBasins[[basin,1]]],{basin,1,Length@RiverBasins}];
iPrint["[MH-3]\n[MH-3] Converting ................ AdriaCLIM format"];


tFILE=OutputDIR<>"adriaclim_ERA5_indicator_MH3_timeseries_hist_daily_adriatic_"<>ToString[MH3[[1,1]]]<>"-"<>ToString[MH3[[-1,1]]]<>".csv";
If[FileExistsQ[tFILE],DeleteFile[tFILE]];
Export[tFILE,Prepend[SortBy[Cases[Flatten[Table[Flatten@{ToString[#[[1]]]<>"-"<>StringPadLeft[ToString[#[[2]]],2,"0"]<>"-"<>StringPadLeft[ToString[#[[3]]],2,"0"],
     Table[ToString@NumberForm[i,{12,6}],{i,RiverBasins[[st,4]]}],ToString[#[[4]]]
     }&/@MH3[[All,{1,2,3,st+3}]],{st,1,Length@RiverBasins}],1],_?(#[[4]]!="Null"&)],#[[1]]&],
     {"Date","Lat","Lon","MH3"}],
      "CSV","TextDelimiters"->""];
iPrint["[MH-3] Successfully exported to... "<>FileNameTake@tFILE];


Export[StringReplace[tFILE,".csv"->".txt"],StringJoin@Flatten@{{StringPadRight[#[[1]],24," "],#[[2]],"\n"}&/@
{{"adriaclim_dataset:","indicator"},{"adriaclim_model:","ERA5"},{"adriaclim_scale:","adriatic"},{"adriaclim_timeperiod:","daily"},{"adriaclim_type:","timeseries"},
{"institution:","Universit\[AGrave] di Bologna (Unibo)"},{"contact:","leonardo.aragao@unibo.it"},{"title:","MH-3 Number of Consecutive Days without Precipitation"},{"units:","Consecutive Days"},
{"description:","time-series of consecutive days with precipitation under than 0.1 mm.day-1 over, at least, 70% of the catchment area. Adriatic Sea sections and the Pilot Area of Emilia-Romagna (PA3) aggregate MH\[Dash]3 over the respective catchment area."},
{"polygon1_centroid:","43.379112,14.840040"},{"polygon1:","adriaclim_indicator_RD_MH_polygon1.csv"},
{"polygon2_centroid:","44.912257,12.987451"},{"polygon2:","adriaclim_indicator_RD_MH_polygon2.csv"},
{"polygon3_centroid:","44.060441,14.244517"},{"polygon3:","adriaclim_indicator_RD_MH_polygon3.csv"},
{"polygon4_centroid:","42.782794,15.802863"},{"polygon4:","adriaclim_indicator_RD_MH_polygon4.csv"},
{"polygon5_centroid:","41.332801,18.137200"},{"polygon5:","adriaclim_indicator_RD_MH_polygon5.csv"},
{"polygon6_centroid:","44.549283,12.689859"},{"polygon6:","adriaclim_indicator_RD_MH_polygon6.csv"}}}];
iPrint["[MH-3]         with metadata in... "<>FileNameTake@StringReplace[tFILE,".csv"->".txt"]];


(* ::Chapter::RGBColor[0.3686274509803922, 0.6823529411764706, 1.]::Closed:: *)
(*Climate Indicators' Graphics*)


iPrint[StringJoin@{"\n\n",#,Table["=",(60-StringLength[#])],"\n"}&[ToUpperCase@"= Graphics Plotting and Exporting "]];


(* ::Subsubsection::GrayLevel[0.5]::Closed:: *)
(*[ MH-1 ] Standardized Precipitation Index (SPI)*)


PlotMH1[ibasin_,itimescale_]:=Framed[DateListPlot[
IntYEARS={Floor[MH1[[itimescale,1,1]],2],Ceiling[If[EvenQ[#],#+1,#]&[MH1[[itimescale,-1,1]]],2]+2};
PercSPI=Round[100 #/Total@#]&[Table[Length@Cases[MH1[[itimescale,All,2+ibasin]],_?(i[[1]]<#<=i[[2]]&)],
{i,{{-200,-2},{-2,-1.5},{-1.5,-1},{-1,0},{0,1},{1,1.5},{1.5,2},{2,200}}}]];
Table[{#[[1;;2]],#[[2+ibasin]]}&/@MH1[[itimescale]],8],

ImageSize->800,AspectRatio->1/2,Frame->False,Axes->False,Joined->True,
BaseStyle->{Gray,AdFONT,14,Thickness[.005]},PlotRange->{{{IntYEARS[[1]]-2,1},{IntYEARS[[2]]+4,1}},{-4,5}},
PlotStyle->Opacity[0,AdBLUE],PlotRangePadding->0,Background->White,
Filling->Table[(i+1)->{{-2,-1.5,-1,0,1,1.5,2}[[i]],{Opacity[{1,.5,.3,.2,0,0,0}[[i]],If[i==1,Darker@AdPINK,AdPINK]],
Opacity[{0,0,0,.4,.6,.2,1}[[i]],If[i>5,Darker@AdBLUE,AdBLUE]]}},{i,1,7}],
GridLines->{Table[{date,1},{date,IntYEARS[[1]]-6,IntYEARS[[2]]+6,2}],Range[-4,6]},GridLinesStyle->GrayLevel[.9],

Epilog->{
Inset[Grid[{{"",Style[" [MH1] Meteo-Hydrological ",AdBLUE2,Larger,FontTracking->"SemiCondensed"],SpanFromLeft},
{"",If[StringTake[#,1]=="[",Row@{Style[" PA",Lighter@AdBLUE,28,FontTracking->"Narrow",FontFamily->"Lato Light"],Style[StringTake[#,{4}],AdBLUE,28,Bold],Style[" "<>StringDrop[#,6],White,28]},
    Style[" "<>#,White,28]]}&[RiverBasins[[ibasin,1]]],
{"",Style[" Standardized Precipitation Index",AdBLUE2,FontTracking->"Condensed"],SpanFromLeft},
{"",Style[" [ERA5] "<>ToString[MH1[[itimescale,1,1]]]<>"-"<>ToString[MH1[[itimescale,-1,1]]],AdBLUE2,Bold,FontTracking->"Condensed"],SpanFromLeft}},
Alignment->{Left,Center},Spacings->{.6,{0,.2,.2,0}},Background->{None,{None,AdPINK}},ItemSize->{Automatic,{Automatic,2}}],{{IntYEARS[[1]]-1,8,1},3.85},{Left,Center}],
Inset[AdLOGO,{{IntYEARS[[1]],1,1},4},{Right,Center},{Automatic,2}],
Text[Style["SPI\[ThinSpace]",Darker[AdBLUE,.1],32,Bold,FontFamily->"Source Sans Pro"],{{IntYEARS[[2]]+2,3,1},4},{Right,Center}],
Inset[Graphics[{AdPINK,Disk[],White,Text[Style[TimeScales[[itimescale]],Bold,White,32,FontFamily->"Source Sans Pro",FontTracking->"Condensed"]]}],
{{IntYEARS[[2]]+2,1,1},4},{Left,Center},{Automatic,.9}],

Inset[Row@{Style["SPI\[ThinSpace]",Darker[AdBLUE,.1],Bold,FontFamily->"Source Sans Pro"],
Style[TimeScales[[itimescale]],Bold,AdPINK,Larger,FontTracking->"Narrow",FontFamily->"Source Sans Pro"]},{{IntYEARS[[1]]-1,1,1},-3.5}],
Table[Rotate[Text[Style[year,GrayLevel[.7],Background->White],{{year,1,1},-3.5}],90 Degree],{year,IntYEARS[[1]]+2,IntYEARS[[2]]-2,2}],

Table[{Opacity[i[[1]],i[[2]]],Polygon[{{{IntYEARS[[2]],7,1},i[[3]]},{{IntYEARS[[2]]+2,1,1},i[[3]]},
{{IntYEARS[[2]]+2,1,1},2.5},{{IntYEARS[[2]]+1,4,1},2.75},{{IntYEARS[[2]],7,1},2.5}}]},
{i,{{.4,AdBLUE,0},{.6,AdBLUE,1},{.2,Darker@AdBLUE,1.5},{1,Darker@AdBLUE,2}}}],
Table[{Opacity[i[[1]],i[[2]]],Polygon[{{{IntYEARS[[2]],7,1},i[[3]]},{{IntYEARS[[2]]+2,1,1},i[[3]]},
{{IntYEARS[[2]]+2,1,1},-2.5},{{IntYEARS[[2]]+1,4,1},-2.75},{{IntYEARS[[2]],7,1},-2.5}}]},
{i,{{.2,AdPINK,0},{.3,AdPINK,-1},{.5,AdPINK,-1.5},{1,Darker@AdPINK,-2}}}],
Table[Text[Style[ToString[PercSPI[[lvl]]]<>"%",{White,White,White,Darker@AdPINK,Darker@AdBLUE,Darker@AdBLUE,White,White}[[lvl]],14,
FontTracking->"Condensed"],{{IntYEARS[[2]]+1,4,1},{-2.25,-1.75,-1.25,-.5,.5,1.25,1.75,2.25}[[lvl]]}],{lvl,1,8}],
Table[Inset[Style[{"Ext","Sev","Mod","NN-","NN+","Mod","Sev","Ext"}[[lvl]],Flatten[{Table[Darker@AdPINK,4],
Table[Darker@AdBLUE,4]}][[lvl]],14,FontTracking->"Condensed"],
{{IntYEARS[[2]]+2,4,1},{-2.25,-1.75,-1.25,-.5,.5,1.25,1.75,2.25}[[lvl]]},{Left,Center}],{lvl,1,8}],

Thickness[.001],Gray,Line[{{{IntYEARS[[1]]-6,1,1},0},{{IntYEARS[[2]]+6,1,1},0}}],
Table[Text[Style[" "<>ToString@SPI<>"\[ThinSpace]",GrayLevel[.7],Background->White,Larger],{{IntYEARS[[1]]-1,1,1},SPI}],{SPI,-2,2}]
}],FrameStyle->{Thickness[5],GrayLevel[.95]},Background->White]


iPrint[StringJoin@{"\n",#,Table["=",(60-StringLength[#])],"\n[MH-1]"}&["[MH-1] Standardized Precipitation Index (SPI) "]];

DeleteFile@FileNames[OutputDIR<>"*MH1*.png"];
Table[{iPrint["[MH-1] Exporting .............["<>StringPadLeft[ToString[basin],2,"0"]<>"] "<>RiverBasins[[basin,1]]],
Export[OutputDIR<>"AdriaCLIM_MH1_ERA5_"<>ToString[MH1[[4,1,1]]]<>"-"<>ToString[MH1[[4,-1,1]]]<>"_"<>StringPadLeft[ToString[basin],2,"0"]<>".png",
PlotMH1[basin,4],ImageResolution->300]},{basin,1,Length@RiverBasins}];


(* ::Subsubsection::GrayLevel[0.5]::Closed:: *)
(*[ MH-2 ] Standardized and Evapotranspiration Index (SPEI)*)


PlotMH2[ibasin_,itimescale_]:=Framed[DateListPlot[
IntYEARS={Floor[MH2[[itimescale,1,1]],2],Ceiling[If[EvenQ[#],#+1,#]&[MH2[[itimescale,-1,1]]],2]+2};
PercSPI=Round[100 #/Total@#]&[Table[Length@Cases[MH2[[itimescale,All,2+ibasin]],_?(i[[1]]<#<=i[[2]]&)],
{i,{{-200,-2},{-2,-1.5},{-1.5,-1},{-1,0},{0,1},{1,1.5},{1.5,2},{2,200}}}]];
Table[{#[[1;;2]],#[[2+ibasin]]}&/@MH2[[itimescale]],8],

ImageSize->800,AspectRatio->1/2,Frame->False,Axes->False,Joined->True,
BaseStyle->{Gray,AdFONT,14,Thickness[.005]},PlotRange->{{{IntYEARS[[1]]-2,1},{IntYEARS[[2]]+4,1}},{-4,5}},
PlotStyle->Opacity[0,AdBLUE],PlotRangePadding->0,Background->White,
Filling->Table[(i+1)->{{-2,-1.5,-1,0,1,1.5,2}[[i]],{Opacity[{1,.5,.3,.2,0,0,0}[[i]],If[i==1,Darker@AdPINK,AdPINK]],
Opacity[{0,0,0,.4,.6,.2,1}[[i]],If[i>5,Darker@AdBLUE,AdBLUE]]}},{i,1,7}],
GridLines->{Table[{date,1},{date,IntYEARS[[1]]-6,IntYEARS[[2]]+6,2}],Range[-4,6]},GridLinesStyle->GrayLevel[.9],

Epilog->{
Inset[Grid[{{"",Style[" [MH2] Meteo-Hydrological ",AdBLUE2,Larger,FontTracking->"SemiCondensed"],SpanFromLeft},
{"",If[StringTake[#,1]=="[",Row@{Style[" PA",Lighter@AdBLUE,28,FontTracking->"Narrow",FontFamily->"Lato Light"],Style[StringTake[#,{4}],AdBLUE,28,Bold],Style[" "<>StringDrop[#,6],White,28]},
    Style[" "<>#,White,28]]}&[RiverBasins[[ibasin,1]]],
{"",Style[" Standardized Precipitation and Evapotranspiration Index",AdBLUE2,FontTracking->"Condensed"],SpanFromLeft},
{"",Style[" [ERA5] "<>ToString[MH2[[itimescale,1,1]]]<>"-"<>ToString[MH2[[itimescale,-1,1]]],AdBLUE2,Bold,FontTracking->"Condensed"],SpanFromLeft}},
Alignment->{Left,Center},Spacings->{.6,{0,.2,.2,0}},Background->{None,{None,AdPINK}},ItemSize->{Automatic,{Automatic,2}}],{{IntYEARS[[1]]-1,8,1},3.85},{Left,Center}],
Inset[AdLOGO,{{IntYEARS[[1]],1,1},4},{Right,Center},{Automatic,2}],
Text[Style["SPEI\[ThinSpace]",Darker[AdBLUE,.1],32,Bold,FontFamily->"Source Sans Pro"],{{IntYEARS[[2]]+2,3,1},4},{Right,Center}],
Inset[Graphics[{AdPINK,Disk[],White,Text[Style[TimeScales[[itimescale]],Bold,White,32,FontFamily->"Source Sans Pro",FontTracking->"Condensed"]]}],
{{IntYEARS[[2]]+2,1,1},4},{Left,Center},{Automatic,.9}],

Inset[Row@{Style["SPEI\[ThinSpace]",Darker[AdBLUE,.1],Bold,FontFamily->"Source Sans Pro"],
Style[TimeScales[[itimescale]],Bold,AdPINK,Larger,FontTracking->"Narrow",FontFamily->"Source Sans Pro"]},{{IntYEARS[[1]]-1,1,1},-3.5}],
Table[Rotate[Text[Style[year,GrayLevel[.7],Background->White],{{year,1,1},-3.5}],90 Degree],{year,IntYEARS[[1]]+2,IntYEARS[[2]]-2,2}],

Table[{Opacity[i[[1]],i[[2]]],Polygon[{{{IntYEARS[[2]],7,1},i[[3]]},{{IntYEARS[[2]]+2,1,1},i[[3]]},
{{IntYEARS[[2]]+2,1,1},2.5},{{IntYEARS[[2]]+1,4,1},2.75},{{IntYEARS[[2]],7,1},2.5}}]},
{i,{{.4,AdBLUE,0},{.6,AdBLUE,1},{.2,Darker@AdBLUE,1.5},{1,Darker@AdBLUE,2}}}],
Table[{Opacity[i[[1]],i[[2]]],Polygon[{{{IntYEARS[[2]],7,1},i[[3]]},{{IntYEARS[[2]]+2,1,1},i[[3]]},
{{IntYEARS[[2]]+2,1,1},-2.5},{{IntYEARS[[2]]+1,4,1},-2.75},{{IntYEARS[[2]],7,1},-2.5}}]},
{i,{{.2,AdPINK,0},{.3,AdPINK,-1},{.5,AdPINK,-1.5},{1,Darker@AdPINK,-2}}}],
Table[Text[Style[ToString[PercSPI[[lvl]]]<>"%",{White,White,White,Darker@AdPINK,Darker@AdBLUE,Darker@AdBLUE,White,White}[[lvl]],14,
FontTracking->"Condensed"],{{IntYEARS[[2]]+1,4,1},{-2.25,-1.75,-1.25,-.5,.5,1.25,1.75,2.25}[[lvl]]}],{lvl,1,8}],
Table[Inset[Style[{"Ext","Sev","Mod","NN-","NN+","Mod","Sev","Ext"}[[lvl]],Flatten[{Table[Darker@AdPINK,4],
Table[Darker@AdBLUE,4]}][[lvl]],14,FontTracking->"Condensed"],
{{IntYEARS[[2]]+2,4,1},{-2.25,-1.75,-1.25,-.5,.5,1.25,1.75,2.25}[[lvl]]},{Left,Center}],{lvl,1,8}],

Thickness[.001],Gray,Line[{{{IntYEARS[[1]]-6,1,1},0},{{IntYEARS[[2]]+6,1,1},0}}],
Table[Text[Style[" "<>ToString@SPEI<>"\[ThinSpace]",GrayLevel[.7],Background->White,Larger],{{IntYEARS[[1]]-1,1,1},SPEI}],{SPEI,-2,2}]
}],FrameStyle->{Thickness[5],GrayLevel[.95]},Background->White]


iPrint[StringJoin@{"\n",#,Table["=",(60-StringLength[#])],"\n[MH-2]"}&["[MH-2] Standardized Precipitation and Evapotranspiration Index (SPEI) "]];

DeleteFile@FileNames[OutputDIR<>"*MH2*.png"];
Table[{iPrint["[MH-2] Exporting .............["<>StringPadLeft[ToString[basin],2,"0"]<>"] "<>RiverBasins[[basin,1]]],
Export[OutputDIR<>"AdriaCLIM_MH2_ERA5_"<>ToString[MH2[[4,1,1]]]<>"-"<>ToString[MH2[[4,-1,1]]]<>"_"<>StringPadLeft[ToString[basin],2,"0"]<>".png",
PlotMH2[basin,4],ImageResolution->300]},{basin,1,Length@RiverBasins}];


(* ::Subsubsection::GrayLevel[0.5]::Closed:: *)
(*[ MH-3 ] Number of Consecutive Days without Precipitation*)


PlotMH3[ibasin_]:=Framed[DateListPlot[
IntYEARS={Floor[MH3[[1,1]]-1,2],Ceiling[If[EvenQ[#],#+1,#]&[MH3[[-1,1]]],2]+0};
pSC={Floor[-.2#],Ceiling[1.4#],Round[.1#]}&[30];
{#[[1;;3]],#[[3+ibasin]]}&/@MH3,

ImageSize->800,AspectRatio->1/2,Frame->False,Axes->False,Joined->True,
BaseStyle->{Gray,AdFONT,14,Thickness[.005]},PlotRange->{{{IntYEARS[[1]]-2,1},{IntYEARS[[2]]+4,1}},pSC[[1;;2]]},
PlotStyle->Opacity[0,AdBLUE2],PlotRangePadding->0,Background->White,
Filling->{1->{0,Directive@{Thick,Lighter@AdBLUE2}}},
GridLines->{Table[{date,1},{date,IntYEARS[[1]]-6,IntYEARS[[2]]+6,2}],Range[#[[1]],#[[2]],#[[3]]]&[pSC]},GridLinesStyle->GrayLevel[.9],

Epilog->{
Inset[Grid[{{"",Style[" [MH3] Meteo-Hydrological ",AdBLUE2,Larger,FontTracking->"SemiCondensed"],SpanFromLeft},
{"",If[StringTake[#,1]=="[",Row@{Style[" PA",Lighter@AdBLUE,28,FontTracking->"Narrow",FontFamily->"Lato Light"],Style[StringTake[#,{4}],AdBLUE,28,Bold],Style[" "<>StringDrop[#,6],White,28]},
    Style[" "<>#,White,28]]}&[RiverBasins[[ibasin,1]]],
{"",Style[" Number of Consecutive Days without Precipitation",AdBLUE2,FontTracking->"Condensed"],SpanFromLeft},
{"",Style[" [ERA5] "<>ToString[MH3[[1,1]]]<>"-"<>ToString[MH3[[-1,1]]],AdBLUE2,Bold,FontTracking->"Condensed"],SpanFromLeft}},
Alignment->{Left,Center},Spacings->{.6,{0,.2,.2,0}},Background->{None,{None,AdPINK}},ItemSize->{Automatic,{Automatic,2}}],{{IntYEARS[[1]]-1,8,1},pSC[[2]]+1.1pSC[[1]]},{Left,Center}],
Inset[AdLOGO,{{IntYEARS[[1]],1,1},pSC[[2]]+pSC[[1]]},{Right,Center},{AbsoluteTime@{1901,7,1},Automatic}],

Temp=Cases[Cases[#[[Flatten@Position[#,0]-1]]&[MH3[[All,ibasin+3]]],Except[0]],_Integer];
If[#!=0,AppendTo[Temp,#]]&[MH3[[-1,ibasin+3]]];
Inset[Grid[{{"Climatology (excluding "<>ToString@Round[(100Length@Cases[#,0]/Length@#)&[MH3[[All,ibasin+3]]]]<>"% of rainy days)",SpanFromLeft},
{"P05","Q1","Q2","Avg","Q3","P95"},Temp=Insert[Table[Quantile[Temp,q],{q,{.05,.25,.5,.75,.95}}],Round[1.Mean@Temp],4]},
Alignment->Center,Spacings->{0,.5},ItemSize->4,BaseStyle->{Smaller,AdBLUE2,FontTracking->"Condensed"},
ItemStyle->{Automatic,Automatic,{{2,3}->White,{2,4}->White,{3,3}->Bold,{3,4}->Bold}},
Background->{None,None,{{2,1}->Opacity[.2,AdBLUE],{2,6}->Opacity[.2,AdBLUE],{2,2}->Opacity[.4,AdBLUE],{2,5}->Opacity[.4,AdBLUE],
{2,3}->AdBLUE2,{2,4}->AdPINK}}],{{IntYEARS[[2]]+3,7,1},pSC[[2]]+pSC[[1]]},{Right,Center}],

Inset[Style["Days\[ThinSpace]",AdBLUE2,Smaller,Background->White],{{IntYEARS[[1]]-1,1,1},pSC[[1]]/2}],
Table[Rotate[Text[Style[year,GrayLevel[.7],Background->White],{{year,1,1},pSC[[1]]/2}],90 Degree],{year,IntYEARS[[1]]+2,IntYEARS[[2]]-2,2}],

Thickness[.001],Gray,Line[{{{IntYEARS[[1]]-6,1,1},0},{{IntYEARS[[2]]+6,1,1},0}}],
Table[Text[Style[" "<>ToString@days<>"\[ThinSpace]",GrayLevel[.7],Background->White,Larger],{{IntYEARS[[1]]-1,1,1},days}],{days,0,pSC[[2]]-6pSC[[3]],2pSC[[3]]}],

Thickness[.003],Dashed,
AdBLUE2,Line[{{{IntYEARS[[1]],1,1},Temp[[3]]},{{IntYEARS[[2]]+2,1,1},Temp[[3]]}}],Inset[Framed[Style[" Q2 ",White,Smaller],Background->AdBLUE2,FrameStyle->None,FrameMargins->0],{{IntYEARS[[2]]+2,1,1},1.1Temp[[3]]},{Left,Top}],
AdPINK,Line[{{{IntYEARS[[1]],1,1},Temp[[4]]},{{IntYEARS[[2]]+2,1,1},Temp[[4]]}}],Inset[Framed[Style[" Avg ",White,Smaller],Background->AdPINK,FrameStyle->None,FrameMargins->0],{{IntYEARS[[2]]+2,1,1},.9Temp[[4]]},{Left,Bottom}],
AdBLUE,Line[{{{IntYEARS[[1]],1,1},Temp[[6]]},{{IntYEARS[[2]]+2,1,1},Temp[[6]]}}],Inset[Framed[Style[" P95 ",White,Smaller],Background->AdBLUE,FrameStyle->None,FrameMargins->0],{{IntYEARS[[2]]+2,1,1},Temp[[6]]},{Left,Center}]
}],FrameStyle->{Thickness[5],GrayLevel[.95]},Background->White]


iPrint[StringJoin@{"\n",#,Table["=",(60-StringLength[#])],"\n[MH-3]"}&["[MH-3] Number of Consecutive Days without Precipitation "]];

DeleteFile@FileNames[OutputDIR<>"*MH3*.png"];
Table[{iPrint["[MH-3] Exporting .............["<>StringPadLeft[ToString[basin],2,"0"]<>"] "<>RiverBasins[[basin,1]]],
Export[OutputDIR<>"AdriaCLIM_MH3_ERA5_"<>ToString[MH3[[1,1]]]<>"-"<>ToString[MH3[[-1,1]]]<>"_"<>StringPadLeft[ToString[basin],2,"0"]<>".png",
PlotMH3[basin],ImageResolution->300]},{basin,1,Length@RiverBasins}];


(* ::Subsubsection::GrayLevel[0.5]::Closed:: *)
(*Closure*)


EndProgram
